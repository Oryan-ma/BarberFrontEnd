{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theming = require(\"../../core/theming\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Text = function Text(_ref, ref) {\n  var style = _ref.style,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"theme\"]);\n  var root = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      setNativeProps: function setNativeProps(args) {\n        var _root$current;\n\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n      }\n    };\n  });\n  return React.createElement(_reactNative.Text, _extends({}, rest, {\n    ref: root,\n    style: [_objectSpread(_objectSpread({}, theme.fonts.regular), {}, {\n      color: theme.colors.text,\n      textAlign: 'left'\n    }), style]\n  }));\n};\n\nvar _default = (0, _theming.withTheme)(React.forwardRef(Text));\n\nexports.default = _default;","map":{"version":3,"sources":["Text.tsx"],"names":["Text","rest","root","React","setNativeProps","args","theme","color","textAlign","withTheme"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMA,IAA6C,GAAG,SAAhDA,IAAgD,OAAA,GAAA,EAGjD;AAAA,MAFH,KAEG,QAFH,KAEG;AAAA,MAFH,KAEG,QAFH,KAEG;AAAA,MAFgBC,IAEhB;AACH,MAAMC,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb;AAEAA,EAAAA,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,EAA+B;AAAA,WAAO;AACpCC,MAAAA,cAAc,EAAGC,wBAAAA,IAAD,EAAA;AAAA,YAAA,aAAA;;AAAA,eAAA,CAAA,aAAA,GAAkBH,IAAI,CAAtB,OAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAkBA,aAAAA,CAAAA,cAAAA,CAAlB,IAAkBA,CAAlB;AAAA;AADoB,KAAP;AAAA,GAA/BC;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,GAAG,EAFL,IAAA;AAGE,IAAA,KAAK,EAAE,iCAEAG,KAAK,CAALA,KAAAA,CADL,OADK;AAGHC,MAAAA,KAAK,EAAED,KAAK,CAALA,MAAAA,CAFT,IADK;AAIHE,MAAAA,SAAS,EAAE;AAJR,QAAA,KAAA;AAHT,GAAA,CAAA,CADF;AAVF,CAAA;;eA0BeC,wBAAUN,KAAK,CAALA,UAAAA,CAAzB,IAAyBA,CAAVM,C","sourcesContent":["import * as React from 'react';\nimport { Text as NativeText, TextStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          textAlign: 'left',\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(React.forwardRef(Text));\n"]},"metadata":{},"sourceType":"script"}