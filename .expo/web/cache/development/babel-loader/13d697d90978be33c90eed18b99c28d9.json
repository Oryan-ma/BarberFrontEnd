{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _componentUpdater = require(\"../component-updater\");\n\nvar _interface = require(\"../interface\");\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _calendar = _interopRequireDefault(require(\"../calendar\"));\n\nvar _item = _interopRequireDefault(require(\"./item\"));\n\nvar _index = _interopRequireDefault(require(\"../calendar/header/index\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\oryan\\\\Desktop\\\\BookMeX\\\\BookMexFrontEnd\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar CalendarList = function (_Component) {\n  (0, _inherits2.default)(CalendarList, _Component);\n\n  var _super = _createSuper(CalendarList);\n\n  function CalendarList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CalendarList);\n    _this = _super.call(this, props);\n\n    _this.scrollToMonth = function (m) {\n      var _this$props = _this.props,\n          horizontal = _this$props.horizontal,\n          calendarHeight = _this$props.calendarHeight,\n          calendarWidth = _this$props.calendarWidth,\n          pastScrollRange = _this$props.pastScrollRange;\n      var month = (0, _interface.parseDate)(m);\n      var scrollTo = month || _this.state.openDate;\n      var diffMonths = Math.round(_this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size;\n\n      _this.listView.scrollToOffset({\n        offset: scrollAmount,\n        animated: false\n      });\n    };\n\n    _this.getItemLayout = function (data, index) {\n      var _this$props2 = _this.props,\n          horizontal = _this$props2.horizontal,\n          calendarHeight = _this$props2.calendarHeight,\n          calendarWidth = _this$props2.calendarWidth;\n      return {\n        length: horizontal ? calendarWidth : calendarHeight,\n        offset: (horizontal ? calendarWidth : calendarHeight) * index,\n        index: index\n      };\n    };\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      function rowIsCloseToViewable(index, distance) {\n        for (var i = 0; i < viewableItems.length; i++) {\n          if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      var rowclone = _this.state.rows;\n      var newrows = [];\n      var visibleMonths = [];\n\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = rowclone[i];\n        var rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n\n        if (rowShouldBeRendered && !rowclone[i].getTime) {\n          val = _this.state.openDate.clone().addMonths(i - _this.props.pastScrollRange, true);\n        } else if (!rowShouldBeRendered) {\n          val = _this.state.texts[i];\n        }\n\n        newrows.push(val);\n\n        if (rowIsCloseToViewable(i, 0)) {\n          visibleMonths.push((0, _interface.xdateToData)(val));\n        }\n      }\n\n      _lodash.default.invoke(_this.props, 'onVisibleMonthsChange', visibleMonths);\n\n      _this.setState({\n        rows: newrows,\n        currentMonth: (0, _interface.parseDate)(visibleMonths[0])\n      });\n    };\n\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item;\n      var _this$props3 = _this.props,\n          calendarStyle = _this$props3.calendarStyle,\n          horizontal = _this$props3.horizontal,\n          calendarWidth = _this$props3.calendarWidth,\n          testID = _this$props3.testID,\n          others = (0, _objectWithoutProperties2.default)(_this$props3, [\"calendarStyle\", \"horizontal\", \"calendarWidth\", \"testID\"]);\n      return _react.default.createElement(_item.default, (0, _extends2.default)({}, others, {\n        item: item,\n        testID: testID + \"_\" + item,\n        style: calendarStyle,\n        calendarWidth: horizontal ? calendarWidth : undefined,\n        scrollToMonth: _this.scrollToMonth,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    var rows = [];\n    var texts = [];\n    var date = (0, _interface.parseDate)(props.current) || (0, _xdate.default)();\n\n    for (var i = 0; i <= props.pastScrollRange + props.futureScrollRange; i++) {\n      var rangeDate = date.clone().addMonths(i - props.pastScrollRange, true);\n      var rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n\n      if (props.pastScrollRange - 1 <= i && i <= props.pastScrollRange + 1 || !props.pastScrollRange && i <= props.pastScrollRange + 2) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n\n    _this.state = {\n      rows: rows,\n      texts: texts,\n      openDate: date,\n      currentMonth: (0, _interface.parseDate)(props.current)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CalendarList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevCurrent = (0, _interface.parseDate)(prevProps.current);\n      var current = (0, _interface.parseDate)(this.props.current);\n\n      if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n        this.scrollToMonth(current);\n      }\n    }\n  }, {\n    key: \"scrollToDay\",\n    value: function scrollToDay(d, offset, animated) {\n      var _this$props4 = this.props,\n          horizontal = _this$props4.horizontal,\n          calendarHeight = _this$props4.calendarHeight,\n          calendarWidth = _this$props4.calendarWidth,\n          pastScrollRange = _this$props4.pastScrollRange,\n          firstDay = _this$props4.firstDay;\n      var day = (0, _interface.parseDate)(d);\n      var diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n\n      if (!horizontal) {\n        var week = 0;\n\n        var days = _dateutils.default.page(day, firstDay);\n\n        for (var i = 0; i < days.length; i++) {\n          week = Math.floor(i / 7);\n\n          if (_dateutils.default.sameDate(days[i], day)) {\n            scrollAmount += 46 * week;\n            break;\n          }\n        }\n      }\n\n      this.listView.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"getMonthIndex\",\n    value: function getMonthIndex(month) {\n      var diffMonths = this.state.openDate.diffMonths(month) + this.props.pastScrollRange;\n      return diffMonths;\n    }\n  }, {\n    key: \"updateMonth\",\n    value: function updateMonth(day, doNotTriggerListeners) {\n      var _this2 = this;\n\n      if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        _this2.scrollToMonth(_this2.state.currentMonth);\n\n        if (!doNotTriggerListeners) {\n          var currMont = _this2.state.currentMonth.clone();\n\n          _lodash.default.invoke(_this2.props, 'onMonthChange', (0, _interface.xdateToData)(currMont));\n\n          _lodash.default.invoke(_this2.props, 'onVisibleMonthsChange', [(0, _interface.xdateToData)(currMont)]);\n        }\n      });\n    }\n  }, {\n    key: \"renderStaticHeader\",\n    value: function renderStaticHeader() {\n      var _this$props5 = this.props,\n          staticHeader = _this$props5.staticHeader,\n          horizontal = _this$props5.horizontal,\n          headerStyle = _this$props5.headerStyle;\n      var useStaticHeader = staticHeader && horizontal;\n      var headerProps = (0, _componentUpdater.extractComponentProps)(_index.default, this.props);\n\n      if (useStaticHeader) {\n        return _react.default.createElement(_index.default, (0, _extends2.default)({}, headerProps, {\n          testID: _testIDs.STATIC_HEADER,\n          style: [this.style.staticHeader, headerStyle],\n          month: this.state.currentMonth,\n          addMonth: this.addMonth,\n          accessibilityElementsHidden: true,\n          importantForAccessibility: 'no-hide-descendants',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props6 = this.props,\n          style = _this$props6.style,\n          pastScrollRange = _this$props6.pastScrollRange,\n          futureScrollRange = _this$props6.futureScrollRange,\n          horizontal = _this$props6.horizontal,\n          showScrollIndicator = _this$props6.showScrollIndicator,\n          testID = _this$props6.testID;\n      return _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        ref: function ref(c) {\n          return _this3.listView = c;\n        },\n        style: [this.style.container, style],\n        initialListSize: pastScrollRange + futureScrollRange + 1,\n        data: this.state.rows,\n        renderItem: this.renderItem,\n        getItemLayout: this.getItemLayout,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        initialScrollIndex: this.state.openDate ? this.getMonthIndex(this.state.openDate) : false,\n        showsVerticalScrollIndicator: showScrollIndicator,\n        showsHorizontalScrollIndicator: horizontal && showScrollIndicator,\n        testID: testID,\n        onLayout: this.props.onLayout,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        pagingEnabled: this.props.pagingEnabled,\n        scrollEnabled: this.props.scrollEnabled,\n        scrollsToTop: this.props.scrollsToTop,\n        horizontal: this.props.horizontal,\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,\n        keyExtractor: this.props.keyExtractor,\n        onEndReachedThreshold: this.props.onEndReachedThreshold,\n        onEndReached: this.props.onEndReached,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }\n      }), this.renderStaticHeader());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var rowclone = prevState.rows;\n      var newrows = [];\n\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = prevState.texts[i];\n\n        if (rowclone[i].getTime) {\n          val = rowclone[i].clone();\n          val.propbump = rowclone[i].propbump ? rowclone[i].propbump + 1 : 1;\n        }\n\n        newrows.push(val);\n      }\n\n      return {\n        rows: newrows\n      };\n    }\n  }]);\n  return CalendarList;\n}(_react.Component);\n\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, _calendar.default.propTypes), {}, {\n  pastScrollRange: _propTypes.default.number,\n  futureScrollRange: _propTypes.default.number,\n  calendarWidth: _propTypes.default.number,\n  calendarHeight: _propTypes.default.number,\n  calendarStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  staticHeader: _propTypes.default.bool,\n  showScrollIndicator: _propTypes.default.bool,\n  scrollEnabled: _propTypes.default.bool,\n  scrollsToTop: _propTypes.default.bool,\n  pagingEnabled: _propTypes.default.bool,\n  horizontal: _propTypes.default.bool,\n  keyboardShouldPersistTaps: _propTypes.default.oneOf(['never', 'always', 'handled']),\n  keyExtractor: _propTypes.default.func,\n  onEndReachedThreshold: _propTypes.default.number,\n  onEndReached: _propTypes.default.func\n});\nCalendarList.defaultProps = {\n  calendarWidth: width,\n  calendarHeight: 360,\n  pastScrollRange: 50,\n  futureScrollRange: 50,\n  showScrollIndicator: false,\n  horizontal: false,\n  scrollsToTop: false,\n  scrollEnabled: true,\n  removeClippedSubviews: _reactNative.Platform.OS === 'android',\n  keyExtractor: function keyExtractor(item, index) {\n    return String(index);\n  }\n};\nvar _default = CalendarList;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/oryan/Desktop/BookMeX/BookMexFrontEnd/node_modules/react-native-calendars/src/calendar-list/index.js"],"names":["Dimensions","get","width","CalendarList","props","scrollToMonth","m","horizontal","calendarHeight","calendarWidth","pastScrollRange","month","scrollTo","state","openDate","diffMonths","Math","round","clone","setDate","size","scrollAmount","listView","scrollToOffset","offset","animated","getItemLayout","data","index","length","addMonth","count","updateMonth","currentMonth","addMonths","onViewableItemsChanged","viewableItems","rowIsCloseToViewable","distance","i","abs","parseInt","rowclone","rows","newrows","visibleMonths","val","rowShouldBeRendered","getTime","texts","push","_","invoke","setState","renderItem","item","calendarStyle","testID","others","undefined","style","theme","viewabilityConfig","itemVisiblePercentThreshold","date","current","futureScrollRange","rangeDate","rangeDateStr","toString","prevProps","prevCurrent","d","firstDay","day","week","days","dateutils","page","floor","sameDate","doNotTriggerListeners","currMont","staticHeader","headerStyle","useStaticHeader","headerProps","CalendarHeader","STATIC_HEADER","showScrollIndicator","c","container","getMonthIndex","onLayout","removeClippedSubviews","pagingEnabled","scrollEnabled","scrollsToTop","keyboardShouldPersistTaps","keyExtractor","onEndReachedThreshold","onEndReached","renderStaticHeader","nextProps","prevState","propbump","Component","displayName","propTypes","Calendar","PropTypes","number","oneOfType","object","array","bool","oneOf","func","defaultProps","Platform","OS","String"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component} from 'react';\nimport {FlatList, Platform, Dimensions, View} from 'react-native';\nimport {extractComponentProps} from '../component-updater';\nimport {xdateToData, parseDate} from '../interface';\nimport dateutils from '../dateutils';\nimport {STATIC_HEADER} from '../testIDs';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\n\nconst {width} = Dimensions.get('window');\n\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar-list.gif\n */\nclass CalendarList extends Component {\n  static displayName = 'CalendarList';\n\n  static propTypes = {\n    ...Calendar.propTypes,\n    /** Max amount of months allowed to scroll to the past. Default = 50 */\n    pastScrollRange: PropTypes.number,\n    /** Max amount of months allowed to scroll to the future. Default = 50 */\n    futureScrollRange: PropTypes.number,\n    /** Used when calendar scroll is horizontal, default is device width, pagination should be disabled */\n    calendarWidth: PropTypes.number,\n    /** Dynamic calendar height */\n    calendarHeight: PropTypes.number,\n    /** Style for the List item (the calendar) */\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Whether to use static header that will not scroll with the list (horizontal only) */\n    staticHeader: PropTypes.bool,\n    /** Enable or disable vertical / horizontal scroll indicator. Default = false */\n    showScrollIndicator: PropTypes.bool,\n\n    /** Enable or disable scrolling of calendar list */\n    scrollEnabled: PropTypes.bool,\n    /** When true, the calendar list scrolls to top when the status bar is tapped. Default = true */\n    scrollsToTop: PropTypes.bool,\n    /** Enable or disable paging on scroll */\n    pagingEnabled: PropTypes.bool,\n    /** Whether the scroll is horizontal */\n    horizontal: PropTypes.bool,\n    /** Should Keyboard persist taps */\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    /** A custom key extractor for the generated calendar months */\n    keyExtractor: PropTypes.func,\n    /** How far from the end to trigger the onEndReached callback */\n    onEndReachedThreshold: PropTypes.number,\n    /** Called once when the scroll position gets within onEndReachedThreshold */\n    onEndReached: PropTypes.func\n  };\n\n  static defaultProps = {\n    calendarWidth: width,\n    calendarHeight: 360,\n    pastScrollRange: 50,\n    futureScrollRange: 50,\n    showScrollIndicator: false,\n    horizontal: false,\n    scrollsToTop: false,\n    scrollEnabled: true,\n    removeClippedSubviews: Platform.OS === 'android',\n    keyExtractor: (item, index) => String(index)\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n\n    const rows = [];\n    const texts = [];\n    const date = parseDate(props.current) || XDate();\n\n    for (let i = 0; i <= props.pastScrollRange + props.futureScrollRange; i++) {\n      const rangeDate = date.clone().addMonths(i - props.pastScrollRange, true);\n      const rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n      /*\n       * This selects range around current shown month [-0, +2] or [-1, +1] month for detail calendar rendering.\n       * If `this.pastScrollRange` is `undefined` it's equal to `false` or 0 in next condition.\n       */\n      if (\n        (props.pastScrollRange - 1 <= i && i <= props.pastScrollRange + 1) ||\n        (!props.pastScrollRange && i <= props.pastScrollRange + 2)\n      ) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n\n    this.state = {\n      rows,\n      texts,\n      openDate: date,\n      currentMonth: parseDate(props.current)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevCurrent = parseDate(prevProps.current);\n    const current = parseDate(this.props.current);\n\n    if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n      this.scrollToMonth(current);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const rowclone = prevState.rows;\n    const newrows = [];\n\n    for (let i = 0; i < rowclone.length; i++) {\n      let val = prevState.texts[i];\n      if (rowclone[i].getTime) {\n        val = rowclone[i].clone();\n        val.propbump = rowclone[i].propbump ? rowclone[i].propbump + 1 : 1;\n      }\n      newrows.push(val);\n    }\n    return {rows: newrows};\n  }\n\n  scrollToDay(d, offset, animated) {\n    const {horizontal, calendarHeight, calendarWidth, pastScrollRange, firstDay} = this.props;\n    const day = parseDate(d);\n    const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n    const size = horizontal ? calendarWidth : calendarHeight;\n    let scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n\n    if (!horizontal) {\n      let week = 0;\n      const days = dateutils.page(day, firstDay);\n      for (let i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (dateutils.sameDate(days[i], day)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    this.listView.scrollToOffset({offset: scrollAmount, animated});\n  }\n\n  scrollToMonth = m => {\n    const {horizontal, calendarHeight, calendarWidth, pastScrollRange} = this.props;\n    const month = parseDate(m);\n    const scrollTo = month || this.state.openDate;\n    let diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n    const size = horizontal ? calendarWidth : calendarHeight;\n    const scrollAmount = size * pastScrollRange + diffMonths * size;\n\n    this.listView.scrollToOffset({offset: scrollAmount, animated: false});\n  };\n\n  getItemLayout = (data, index) => {\n    const {horizontal, calendarHeight, calendarWidth} = this.props;\n\n    return {\n      length: horizontal ? calendarWidth : calendarHeight,\n      offset: (horizontal ? calendarWidth : calendarHeight) * index,\n      index\n    };\n  };\n\n  getMonthIndex(month) {\n    let diffMonths = this.state.openDate.diffMonths(month) + this.props.pastScrollRange;\n    return diffMonths;\n  }\n\n  addMonth = count => {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  };\n\n  updateMonth(day, doNotTriggerListeners) {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n\n    this.setState(\n      {\n        currentMonth: day.clone()\n      },\n      () => {\n        this.scrollToMonth(this.state.currentMonth);\n\n        if (!doNotTriggerListeners) {\n          const currMont = this.state.currentMonth.clone();\n\n          _.invoke(this.props, 'onMonthChange', xdateToData(currMont));\n          _.invoke(this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n        }\n      }\n    );\n  }\n\n  onViewableItemsChanged = ({viewableItems}) => {\n    function rowIsCloseToViewable(index, distance) {\n      for (let i = 0; i < viewableItems.length; i++) {\n        if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    const rowclone = this.state.rows;\n    const newrows = [];\n    const visibleMonths = [];\n\n    for (let i = 0; i < rowclone.length; i++) {\n      let val = rowclone[i];\n      const rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n\n      if (rowShouldBeRendered && !rowclone[i].getTime) {\n        val = this.state.openDate.clone().addMonths(i - this.props.pastScrollRange, true);\n      } else if (!rowShouldBeRendered) {\n        val = this.state.texts[i];\n      }\n      newrows.push(val);\n      if (rowIsCloseToViewable(i, 0)) {\n        visibleMonths.push(xdateToData(val));\n      }\n    }\n\n    _.invoke(this.props, 'onVisibleMonthsChange', visibleMonths);\n\n    this.setState({\n      rows: newrows,\n      currentMonth: parseDate(visibleMonths[0])\n    });\n  };\n\n  renderItem = ({item}) => {\n    const {calendarStyle, horizontal, calendarWidth, testID, ...others} = this.props;\n\n    return (\n      <CalendarListItem\n        {...others}\n        item={item}\n        testID={`${testID}_${item}`}\n        style={calendarStyle}\n        calendarWidth={horizontal ? calendarWidth : undefined}\n        scrollToMonth={this.scrollToMonth}\n      />\n    );\n  };\n\n  renderStaticHeader() {\n    const {staticHeader, horizontal, headerStyle} = this.props;\n    const useStaticHeader = staticHeader && horizontal;\n    const headerProps = extractComponentProps(CalendarHeader, this.props);\n\n    if (useStaticHeader) {\n      return (\n        <CalendarHeader\n          {...headerProps}\n          testID={STATIC_HEADER}\n          style={[this.style.staticHeader, headerStyle]}\n          month={this.state.currentMonth}\n          addMonth={this.addMonth}\n          accessibilityElementsHidden={true} // iOS\n          importantForAccessibility={'no-hide-descendants'} // Android\n        />\n      );\n    }\n  }\n\n  render() {\n    const {style, pastScrollRange, futureScrollRange, horizontal, showScrollIndicator, testID} = this.props;\n\n    return (\n      <View>\n        <FlatList\n          ref={c => (this.listView = c)}\n          style={[this.style.container, style]}\n          initialListSize={pastScrollRange + futureScrollRange + 1} // ListView deprecated\n          data={this.state.rows}\n          renderItem={this.renderItem}\n          getItemLayout={this.getItemLayout}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={this.viewabilityConfig}\n          initialScrollIndex={this.state.openDate ? this.getMonthIndex(this.state.openDate) : false}\n          showsVerticalScrollIndicator={showScrollIndicator}\n          showsHorizontalScrollIndicator={horizontal && showScrollIndicator}\n          testID={testID}\n          onLayout={this.props.onLayout}\n          removeClippedSubviews={this.props.removeClippedSubviews}\n          pagingEnabled={this.props.pagingEnabled}\n          scrollEnabled={this.props.scrollEnabled}\n          scrollsToTop={this.props.scrollsToTop}\n          horizontal={this.props.horizontal}\n          keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps}\n          keyExtractor={this.props.keyExtractor}\n          onEndReachedThreshold={this.props.onEndReachedThreshold}\n          onEndReached={this.props.onEndReached}\n        />\n        {this.renderStaticHeader()}\n      </View>\n    );\n  }\n}\n\nexport default CalendarList;\n"]},"metadata":{},"sourceType":"script"}