{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar ReactNative = _interopRequireWildcard(require(\"react-native\"));\n\nvar _componentUpdater = require(\"../component-updater\");\n\nvar _interface = require(\"../interface\");\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _input = require(\"../input\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _calendarList = _interopRequireDefault(require(\"../calendar-list\"));\n\nvar _reservationList = _interopRequireDefault(require(\"./reservation-list\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\oryan\\\\Desktop\\\\BookMeX\\\\BookMexFrontEnd\\\\node_modules\\\\react-native-calendars\\\\src\\\\agenda\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\nvar Text = ReactNative.Text,\n    View = ReactNative.View,\n    Dimensions = ReactNative.Dimensions,\n    Animated = ReactNative.Animated,\n    ViewPropTypes = ReactNative.ViewPropTypes;\nvar viewPropTypes = typeof document !== 'undefined' ? _propTypes.default.shape({\n  style: _propTypes.default.object\n}) : ViewPropTypes || View.propTypes;\n\nvar AgendaView = function (_Component) {\n  (0, _inherits2.default)(AgendaView, _Component);\n\n  var _super = _createSuper(AgendaView);\n\n  function AgendaView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AgendaView);\n    _this = _super.call(this, props);\n\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n\n    _this.setScrollPadPosition = function (y, animated) {\n      if (_this.scrollPad.scrollTo) {\n        _this.scrollPad.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        _this.scrollPad.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n\n    _this.chooseDayFromCalendar = function (d) {\n      _this.chooseDay(d, !_this.state.calendarScrollable);\n    };\n\n    _this.generateMarkings = function () {\n      var _this$props = _this.props,\n          markedDates = _this$props.markedDates,\n          items = _this$props.items;\n      var markings = markedDates;\n\n      if (!markings) {\n        markings = {};\n        Object.keys(items || {}).forEach(function (key) {\n          if (items[key] && items[key].length) {\n            markings[key] = {\n              marked: true\n            };\n          }\n        });\n      }\n\n      var key = _this.state.selectedDay.toString('yyyy-MM-dd');\n\n      return _objectSpread(_objectSpread({}, markings), {}, (0, _defineProperty2.default)({}, key, _objectSpread(_objectSpread({}, markings[key] || {}), {\n        selected: true\n      })));\n    };\n\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n\n    _this.onCalendarListLayout = function () {\n      _this.calendar.scrollToDay(_this.state.selectedDay.clone(), _this.calendarOffset(), false);\n    };\n\n    _this.onLayout = function (event) {\n      _this.viewHeight = event.nativeEvent.layout.height;\n      _this.viewWidth = event.nativeEvent.layout.width;\n\n      _this.forceUpdate();\n    };\n\n    _this.onTouchStart = function () {\n      _this.headerState = 'touched';\n\n      if (_this.knob) {\n        _this.knob.setNativeProps({\n          style: {\n            opacity: 0.5\n          }\n        });\n      }\n    };\n\n    _this.onTouchEnd = function () {\n      if (_this.knob) {\n        _this.knob.setNativeProps({\n          style: {\n            opacity: 1\n          }\n        });\n      }\n\n      if (_this.headerState === 'touched') {\n        _this.setScrollPadPosition(0, true);\n\n        _this.enableCalendarScrolling();\n      }\n\n      _this.headerState = 'idle';\n    };\n\n    _this.onStartDrag = function () {\n      _this.headerState = 'dragged';\n\n      _this.knobTracker.reset();\n    };\n\n    _this.onSnapAfterDrag = function (e) {\n      _this.onTouchEnd();\n\n      var currentY = e.nativeEvent.contentOffset.y;\n\n      _this.knobTracker.add(currentY);\n\n      var projectedY = currentY + _this.knobTracker.estimateSpeed() * 250;\n\n      var maxY = _this.initialScrollPadPosition();\n\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n\n      _this.setScrollPadPosition(snapY, true);\n\n      if (snapY === 0) {\n        _this.enableCalendarScrolling();\n      }\n    };\n\n    _this.onVisibleMonthsChange = function (months) {\n      _lodash.default.invoke(_this.props, 'onVisibleMonthsChange', months);\n\n      if (_this.props.items && !_this.state.firstReservationLoad) {\n        clearTimeout(_this.scrollTimeout);\n        _this.scrollTimeout = setTimeout(function () {\n          if (_this._isMounted) {\n            _lodash.default.invoke(_this.props, 'loadItemsForMonth', months[0]);\n          }\n        }, 200);\n      }\n    };\n\n    _this.onDayChange = function (day) {\n      var newDate = (0, _interface.parseDate)(day);\n\n      var withAnimation = _dateutils.default.sameMonth(newDate, _this.state.selectedDay);\n\n      _this.calendar.scrollToDay(day, _this.calendarOffset(), withAnimation);\n\n      _this.setState({\n        selectedDay: newDate\n      });\n\n      _lodash.default.invoke(_this.props, 'onDayChange', (0, _interface.xdateToData)(newDate));\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: (0, _interface.parseDate)(props.selected) || (0, _xdate.default)(true),\n      topDay: (0, _interface.parseDate)(props.selected) || (0, _xdate.default)(true)\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.knobTracker = new _input.VelocityTracker();\n\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AgendaView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.items) {\n        this.loadReservations(this.props);\n      }\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      this.setState({\n        calendarScrollable: true\n      });\n\n      _lodash.default.invoke(this.props, 'onCalendarToggled', true);\n\n      this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this2 = this;\n\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n        this.setState({\n          firstReservationLoad: true\n        }, function () {\n          _lodash.default.invoke(_this2.props, 'loadItemsForMonth', (0, _interface.xdateToData)(_this2.state.selectedDay));\n        });\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var day = (0, _interface.parseDate)(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n\n      _lodash.default.invoke(this.props, 'onCalendarToggled', false);\n\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n      _lodash.default.invoke(this.props, 'loadItemsForMonth', (0, _interface.xdateToData)(day));\n\n      _lodash.default.invoke(this.props, 'onDayPress', (0, _interface.xdateToData)(day));\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var _this3 = this;\n\n      var reservationListProps = (0, _componentUpdater.extractComponentProps)(_reservationList.default, this.props);\n      return _react.default.createElement(_reservationList.default, (0, _extends2.default)({}, reservationListProps, {\n        ref: function ref(c) {\n          return _this3.list = c;\n        },\n        reservations: this.props.items,\n        selectedDay: this.state.selectedDay,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange,\n        onScroll: function onScroll() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderCalendarList\",\n    value: function renderCalendarList() {\n      var _this4 = this;\n\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      var calendarListProps = (0, _componentUpdater.extractComponentProps)(_calendarList.default, this.props);\n      return _react.default.createElement(_calendarList.default, (0, _extends2.default)({}, calendarListProps, {\n        ref: function ref(c) {\n          return _this4.calendar = c;\n        },\n        current: this.currentMonth,\n        markedDates: this.generateMarkings(),\n        calendarWidth: this.viewWidth,\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        onLayout: this.onCalendarListLayout,\n        onDayPress: this.chooseDayFromCalendar,\n        onVisibleMonthsChange: this.onVisibleMonthsChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderKnob\",\n    value: function renderKnob() {\n      var _this5 = this;\n\n      var _this$props2 = this.props,\n          hideKnob = _this$props2.hideKnob,\n          renderKnob = _this$props2.renderKnob;\n\n      var knob = _react.default.createElement(View, {\n        style: this.style.knobContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 16\n        }\n      });\n\n      if (!hideKnob) {\n        var knobView = renderKnob ? renderKnob() : _react.default.createElement(View, {\n          style: this.style.knob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 52\n          }\n        });\n        knob = this.state.calendarScrollable ? null : _react.default.createElement(View, {\n          style: this.style.knobContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(View, {\n          ref: function ref(c) {\n            return _this5.knob = c;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 11\n          }\n        }, knobView));\n      }\n\n      return knob;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props3 = this.props,\n          firstDay = _this$props3.firstDay,\n          hideKnob = _this$props3.hideKnob,\n          showWeekNumbers = _this$props3.showWeekNumbers,\n          style = _this$props3.style,\n          testID = _this$props3.testID;\n      var agendaHeight = this.initialScrollPadPosition();\n\n      var weekDaysNames = _dateutils.default.weekDayNames(firstDay);\n\n      var weekdaysStyle = [this.style.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.style.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n\n      var shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        position: 'absolute',\n        width: 80,\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition,\n        left: (this.viewWidth - 80) / 2\n      };\n      return _react.default.createElement(View, {\n        testID: testID,\n        onLayout: this.onLayout,\n        style: [style, {\n          flex: 1,\n          overflow: 'hidden'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(View, {\n        style: this.style.reservations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }\n      }, this.renderReservations()), _react.default.createElement(Animated.View, {\n        style: headerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(Animated.View, {\n        style: {\n          flex: 1,\n          transform: [{\n            translateY: contentTranslate\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }, this.renderCalendarList()), this.renderKnob()), _react.default.createElement(Animated.View, {\n        style: weekdaysStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }\n      }, showWeekNumbers && _react.default.createElement(Text, {\n        allowFontScaling: false,\n        style: this.style.weekday,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 31\n        }\n      }), weekDaysNames.map(function (day, index) {\n        return _react.default.createElement(Text, {\n          allowFontScaling: false,\n          key: day + index,\n          style: _this6.style.weekday,\n          numberOfLines: 1,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }\n        }, day);\n      })), _react.default.createElement(Animated.ScrollView, {\n        ref: function ref(_ref2) {\n          return _this6.scrollPad = _ref2;\n        },\n        style: scrollPadStyle,\n        overScrollMode: \"never\",\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        scrollEventThrottle: 8,\n        scrollsToTop: false,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        onScrollBeginDrag: this.onStartDrag,\n        onScrollEndDrag: this.onSnapAfterDrag,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(View, {\n        testID: _testIDs.AGENDA_CALENDAR_KNOB,\n        style: {\n          height: agendaHeight + KNOB_HEIGHT\n        },\n        onLayout: this.onScrollPadLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.items) {\n        return {\n          firstReservationLoad: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return AgendaView;\n}(_react.Component);\n\nexports.default = AgendaView;\nAgendaView.displayName = 'Agenda';\nAgendaView.propTypes = _objectSpread(_objectSpread(_objectSpread({}, _calendarList.default.propTypes), _reservationList.default.propTypes), {}, {\n  style: viewPropTypes.style,\n  items: _propTypes.default.object,\n  loadItemsForMonth: _propTypes.default.func,\n  onCalendarToggled: _propTypes.default.func,\n  onDayPress: _propTypes.default.func,\n  onDaychange: _propTypes.default.func,\n  renderKnob: _propTypes.default.func,\n  selected: _propTypes.default.any,\n  hideKnob: _propTypes.default.bool\n});","map":{"version":3,"sources":["C:/Users/oryan/Desktop/BookMeX/BookMexFrontEnd/node_modules/react-native-calendars/src/agenda/index.js"],"names":["HEADER_HEIGHT","KNOB_HEIGHT","Text","ReactNative","View","Dimensions","Animated","ViewPropTypes","viewPropTypes","document","PropTypes","shape","style","object","propTypes","AgendaView","props","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","scrollPad","scrollTo","x","getNode","chooseDayFromCalendar","d","chooseDay","state","calendarScrollable","generateMarkings","markedDates","items","markings","Object","keys","forEach","key","length","marked","selectedDay","toString","selected","onScrollPadLayout","setTimeout","setState","calendarIsReady","onCalendarListLayout","calendar","scrollToDay","clone","calendarOffset","onLayout","event","nativeEvent","layout","height","viewWidth","width","forceUpdate","onTouchStart","headerState","knob","setNativeProps","opacity","onTouchEnd","enableCalendarScrolling","onStartDrag","knobTracker","reset","onSnapAfterDrag","e","currentY","contentOffset","add","projectedY","estimateSpeed","maxY","snapY","onVisibleMonthsChange","months","_","invoke","firstReservationLoad","clearTimeout","scrollTimeout","_isMounted","onDayChange","day","newDate","withAnimation","dateutils","sameMonth","theme","windowSize","get","undefined","scrollY","Value","topDay","currentMonth","VelocityTracker","addListener","value","loadReservations","removeAllListeners","prevProps","optimisticScroll","reservationListProps","ReservationList","c","list","shouldHideExtraDays","hideExtraDays","calendarListProps","CalendarList","hideKnob","renderKnob","knobContainer","knobView","firstDay","showWeekNumbers","testID","agendaHeight","weekDaysNames","weekDayNames","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","shouldAllowDragging","scrollPadPosition","scrollPadStyle","position","top","left","flex","overflow","reservations","renderReservations","renderCalendarList","weekday","map","index","ref","useNativeDriver","AGENDA_CALENDAR_KNOB","nextProps","Component","displayName","loadItemsForMonth","func","onCalendarToggled","onDayPress","onDaychange","any","bool"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component} from 'react';\nimport * as ReactNative from 'react-native';\nimport {extractComponentProps} from '../component-updater';\nimport {parseDate, xdateToData} from '../interface';\nimport dateutils from '../dateutils';\nimport {AGENDA_CALENDAR_KNOB} from '../testIDs';\nimport {VelocityTracker} from '../input';\nimport styleConstructor from './style';\nimport CalendarList from '../calendar-list';\nimport ReservationList from './reservation-list';\n\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n\n//Fallback for react-native-web or when RN version is < 0.44\nconst {Text, View, Dimensions, Animated, ViewPropTypes} = ReactNative;\nconst viewPropTypes =\n  typeof document !== 'undefined' ? PropTypes.shape({style: PropTypes.object}) : ViewPropTypes || View.propTypes;\n\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/agenda.gif\n */\nexport default class AgendaView extends Component {\n  static displayName = 'Agenda';\n\n  static propTypes = {\n    ...CalendarList.propTypes,\n    ...ReservationList.propTypes,\n    /** agenda container style */\n    style: viewPropTypes.style,\n    /** the list of items that have to be displayed in agenda. If you want to render item as empty date\n     the value of date key has to be an empty array []. If there exists no value for date key it is\n     considered that the date in question is not yet loaded */\n    items: PropTypes.object,\n    /** callback that gets called when items for a certain month should be loaded (month became visible) */\n    loadItemsForMonth: PropTypes.func,\n    /** callback that fires when the calendar is opened or closed */\n    onCalendarToggled: PropTypes.func,\n    /** callback that gets called on day press */\n    onDayPress: PropTypes.func,\n    /** callback that gets called when day changes while scrolling agenda list */\n    onDaychange: PropTypes.func, //TODO: Should be renamed 'onDayChange'\n    /** specify how agenda knob should look like */\n    renderKnob: PropTypes.func, \n    /** initially selected day */ \n    selected: PropTypes.any, //TODO: Should be renamed 'selectedDay'\n    /** Hide knob button. Default = false */\n    hideKnob: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    const windowSize = Dimensions.get('window');\n    this.viewHeight = windowSize.height;\n    this.viewWidth = windowSize.width;\n\n    this.scrollTimeout = undefined;\n    this.headerState = 'idle';\n\n    this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: parseDate(props.selected) || XDate(true),\n      topDay: parseDate(props.selected) || XDate(true)\n    };\n\n    this.currentMonth = this.state.selectedDay.clone();\n\n    this.knobTracker = new VelocityTracker();\n    this.state.scrollY.addListener(({value}) => this.knobTracker.add(value));\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.loadReservations(this.props);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.state.scrollY.removeAllListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.items) {\n      this.loadReservations(this.props);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.items) {\n      return {firstReservationLoad: false};\n    }\n\n    return null;\n  }\n\n  calendarOffset() {\n    return 96 - this.viewHeight / 2;\n  }\n\n  initialScrollPadPosition = () => {\n    return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n  };\n\n  setScrollPadPosition = (y, animated) => {\n    if (this.scrollPad.scrollTo) {\n      this.scrollPad.scrollTo({x: 0, y, animated});\n    } else {\n      // Support for RN O.61 (Expo 37)\n      this.scrollPad.getNode().scrollTo({x: 0, y, animated});\n    }\n  };\n\n  enableCalendarScrolling() {\n    this.setState({\n      calendarScrollable: true\n    });\n\n    _.invoke(this.props, 'onCalendarToggled', true);\n\n    // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n    // Otherwise the month after current one or before current one remains invisible.\n    // The problem is caused by overflow: 'hidden' style, which we need for dragging\n    // to be performant.\n    // Another working solution for this bug would be to set removeClippedSubviews={false}\n    // in CalendarList listView, but that might impact performance when scrolling\n    // month list in expanded CalendarList.\n    // Further info https://github.com/facebook/react-native/issues/1831\n    this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n  }\n\n  loadReservations(props) {\n    if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n      this.setState(\n        {\n          firstReservationLoad: true\n        },\n        () => {\n          _.invoke(this.props, 'loadItemsForMonth', xdateToData(this.state.selectedDay));\n        }\n      );\n    }\n  }\n\n  chooseDayFromCalendar = d => {\n    this.chooseDay(d, !this.state.calendarScrollable);\n  };\n\n  chooseDay(d, optimisticScroll) {\n    const day = parseDate(d);\n\n    this.setState({\n      calendarScrollable: false,\n      selectedDay: day.clone()\n    });\n\n    _.invoke(this.props, 'onCalendarToggled', false);\n\n    if (!optimisticScroll) {\n      this.setState({\n        topDay: day.clone()\n      });\n    }\n\n    this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n    this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n    _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n    _.invoke(this.props, 'onDayPress', xdateToData(day));\n  }\n\n  generateMarkings = () => {\n    const {markedDates, items} = this.props;\n    let markings = markedDates;\n\n    if (!markings) {\n      markings = {};\n      Object.keys(items || {}).forEach(key => {\n        if (items[key] && items[key].length) {\n          markings[key] = {marked: true};\n        }\n      });\n    }\n\n    const key = this.state.selectedDay.toString('yyyy-MM-dd');\n    return {...markings, [key]: {...(markings[key] || {}), ...{selected: true}}};\n  };\n\n  onScrollPadLayout = () => {\n    // When user touches knob, the actual component that receives touch events is a ScrollView.\n    // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n    // scroll position actually changes (it would stay at 0, when scrolled to the top).\n    this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n    // delay rendering calendar in full height because otherwise it still flickers sometimes\n    setTimeout(() => this.setState({calendarIsReady: true}), 0);\n  };\n\n  onCalendarListLayout = () => {\n    this.calendar.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n  };\n\n  onLayout = event => {\n    this.viewHeight = event.nativeEvent.layout.height;\n    this.viewWidth = event.nativeEvent.layout.width;\n    this.forceUpdate();\n  };\n\n  onTouchStart = () => {\n    this.headerState = 'touched';\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 0.5}});\n    }\n  };\n\n  onTouchEnd = () => {\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 1}});\n    }\n\n    if (this.headerState === 'touched') {\n      this.setScrollPadPosition(0, true);\n      this.enableCalendarScrolling();\n    }\n\n    this.headerState = 'idle';\n  };\n\n  onStartDrag = () => {\n    this.headerState = 'dragged';\n    this.knobTracker.reset();\n  };\n\n  onSnapAfterDrag = e => {\n    // on Android onTouchEnd is not called if dragging was started\n    this.onTouchEnd();\n    const currentY = e.nativeEvent.contentOffset.y;\n    this.knobTracker.add(currentY);\n    const projectedY = currentY + this.knobTracker.estimateSpeed() * 250; /*ms*/\n    const maxY = this.initialScrollPadPosition();\n    const snapY = projectedY > maxY / 2 ? maxY : 0;\n    this.setScrollPadPosition(snapY, true);\n\n    if (snapY === 0) {\n      this.enableCalendarScrolling();\n    }\n  };\n\n  onVisibleMonthsChange = months => {\n    _.invoke(this.props, 'onVisibleMonthsChange', months);\n\n    if (this.props.items && !this.state.firstReservationLoad) {\n      clearTimeout(this.scrollTimeout);\n\n      this.scrollTimeout = setTimeout(() => {\n        if (this._isMounted) {\n          _.invoke(this.props, 'loadItemsForMonth', months[0]);\n        }\n      }, 200);\n    }\n  };\n\n  onDayChange = day => {\n    const newDate = parseDate(day);\n    const withAnimation = dateutils.sameMonth(newDate, this.state.selectedDay);\n\n    this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\n    this.setState({\n      selectedDay: newDate\n    });\n\n    _.invoke(this.props, 'onDayChange', xdateToData(newDate));\n  };\n\n  renderReservations() {\n    const reservationListProps = extractComponentProps(ReservationList, this.props);\n\n    return (\n      <ReservationList\n        {...reservationListProps}\n        ref={c => (this.list = c)}\n        reservations={this.props.items}\n        selectedDay={this.state.selectedDay}\n        topDay={this.state.topDay}\n        onDayChange={this.onDayChange}\n        onScroll={() => {}}\n      />\n    );\n  }\n\n  renderCalendarList() {\n    const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n    const calendarListProps = extractComponentProps(CalendarList, this.props);\n\n    return (\n      <CalendarList\n        {...calendarListProps}\n        ref={c => (this.calendar = c)}\n        current={this.currentMonth}\n        markedDates={this.generateMarkings()}\n        calendarWidth={this.viewWidth}\n        scrollEnabled={this.state.calendarScrollable}\n        hideExtraDays={shouldHideExtraDays}\n        onLayout={this.onCalendarListLayout}\n        onDayPress={this.chooseDayFromCalendar}\n        onVisibleMonthsChange={this.onVisibleMonthsChange}\n      />\n    );\n  }\n\n  renderKnob() {\n    const {hideKnob, renderKnob} = this.props;\n    let knob = <View style={this.style.knobContainer} />;\n\n    if (!hideKnob) {\n      const knobView = renderKnob ? renderKnob() : <View style={this.style.knob} />;\n      knob = this.state.calendarScrollable ? null : (\n        <View style={this.style.knobContainer}>\n          <View ref={c => (this.knob = c)}>{knobView}</View>\n        </View>\n      );\n    }\n    return knob;\n  }\n\n  render() {\n    const {firstDay, hideKnob, showWeekNumbers, style, testID} = this.props;\n    const agendaHeight = this.initialScrollPadPosition();\n    const weekDaysNames = dateutils.weekDayNames(firstDay);\n    const weekdaysStyle = [\n      this.style.weekdays,\n      {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [\n          {\n            translateY: this.state.scrollY.interpolate({\n              inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n              outputRange: [-HEADER_HEIGHT, 0],\n              extrapolate: 'clamp'\n            })\n          }\n        ]\n      }\n    ];\n    const headerTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [agendaHeight, 0],\n      extrapolate: 'clamp'\n    });\n    const contentTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [0, agendaHeight / 2],\n      extrapolate: 'clamp'\n    });\n    const headerStyle = [\n      this.style.header,\n      {\n        bottom: agendaHeight,\n        transform: [{translateY: headerTranslate}]\n      }\n    ];\n\n    if (!this.state.calendarIsReady) {\n      // limit header height until everything is setup for calendar dragging\n      headerStyle.push({height: 0});\n      // fill header with appStyle.calendarBackground background to reduce flickering\n      weekdaysStyle.push({height: HEADER_HEIGHT});\n    }\n\n    const shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n    const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n    const scrollPadStyle = {\n      position: 'absolute',\n      width: 80,\n      height: KNOB_HEIGHT,\n      top: scrollPadPosition,\n      left: (this.viewWidth - 80) / 2\n    };\n\n    return (\n      <View testID={testID} onLayout={this.onLayout} style={[style, {flex: 1, overflow: 'hidden'}]}>\n        <View style={this.style.reservations}>{this.renderReservations()}</View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={{flex: 1, transform: [{translateY: contentTranslate}]}}>\n            {this.renderCalendarList()}\n          </Animated.View>\n          {this.renderKnob()}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.weekday} numberOfLines={1}></Text>}\n          {weekDaysNames.map((day, index) => (\n            <Text allowFontScaling={false} key={day + index} style={this.style.weekday} numberOfLines={1}>\n              {day}\n            </Text>\n          ))}\n        </Animated.View>\n        <Animated.ScrollView\n          ref={ref => (this.scrollPad = ref)}\n          style={scrollPadStyle}\n          overScrollMode=\"never\"\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          scrollEventThrottle={8}\n          scrollsToTop={false}\n          onTouchStart={this.onTouchStart}\n          onTouchEnd={this.onTouchEnd}\n          onScrollBeginDrag={this.onStartDrag}\n          onScrollEndDrag={this.onSnapAfterDrag}\n          onScroll={Animated.event([{nativeEvent: {contentOffset: {y: this.state.scrollY}}}], {useNativeDriver: true})}\n        >\n          <View\n            testID={AGENDA_CALENDAR_KNOB}\n            style={{height: agendaHeight + KNOB_HEIGHT}}\n            onLayout={this.onScrollPadLayout}\n          />\n        </Animated.ScrollView>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}