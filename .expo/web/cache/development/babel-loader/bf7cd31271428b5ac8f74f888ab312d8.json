{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLazyRef;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction useLazyRef(callback) {\n  var lazyRef = React.useRef();\n\n  if (lazyRef.current === undefined) {\n    lazyRef.current = callback();\n  }\n\n  return lazyRef;\n}","map":{"version":3,"sources":["useLazyRef.tsx"],"names":["lazyRef","React","callback"],"mappings":";;;;;;;AAAA;;AAEe,SAAA,UAAA,CAAA,QAAA,EAA0C;AACvD,MAAMA,OAAO,GAAGC,KAAK,CAArB,MAAgBA,EAAhB;;AAEA,MAAID,OAAO,CAAPA,OAAAA,KAAJ,SAAA,EAAmC;AACjCA,IAAAA,OAAO,CAAPA,OAAAA,GAAkBE,QAAlBF,EAAAA;AACD;;AAED,SAAA,OAAA;AACD","sourcesContent":["import * as React from 'react';\n\nexport default function useLazyRef<T>(callback: () => T) {\n  const lazyRef = React.useRef<T | undefined>();\n\n  if (lazyRef.current === undefined) {\n    lazyRef.current = callback();\n  }\n\n  return lazyRef as React.MutableRefObject<T>;\n}\n"]},"metadata":{},"sourceType":"script"}