{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _interface = require(\"../interface\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _calendarContext = _interopRequireDefault(require(\"./calendarContext\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\oryan\\\\Desktop\\\\BookMeX\\\\BookMexFrontEnd\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\calendarProvider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar commons = require('./commons');\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\nvar iconDown = require('../img/down.png');\n\nvar iconUp = require('../img/up.png');\n\nvar TOP_POSITION = 65;\n\nvar CalendarProvider = function (_Component) {\n  (0, _inherits2.default)(CalendarProvider, _Component);\n\n  var _super = _createSuper(CalendarProvider);\n\n  function CalendarProvider(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CalendarProvider);\n    _this = _super.call(this, props);\n\n    _this.getProviderContextValue = function () {\n      return {\n        setDate: _this.setDate,\n        date: _this.state.date,\n        updateSource: _this.state.updateSource,\n        setDisabled: _this.setDisabled\n      };\n    };\n\n    _this.setDate = function (date, updateSource) {\n      var sameMonth = _dateutils.default.sameMonth((0, _xdate.default)(date), (0, _xdate.default)(_this.state.date));\n\n      _this.setState({\n        date: date,\n        updateSource: updateSource,\n        buttonIcon: _this.getButtonIcon(date)\n      }, function () {\n        _this.animateTodayButton(date);\n      });\n\n      _lodash.default.invoke(_this.props, 'onDateChanged', date, updateSource);\n\n      if (!sameMonth) {\n        _lodash.default.invoke(_this.props, 'onMonthChange', (0, _interface.xdateToData)((0, _xdate.default)(date)), updateSource);\n      }\n    };\n\n    _this.setDisabled = function (disabled) {\n      if (_this.props.showTodayButton && disabled !== _this.state.disabled) {\n        _this.setState({\n          disabled: disabled\n        });\n\n        _this.animateOpacity(disabled);\n      }\n    };\n\n    _this.onTodayPress = function () {\n      var today = (0, _xdate.default)().toString('yyyy-MM-dd');\n\n      _this.setDate(today, UPDATE_SOURCES.TODAY_PRESS);\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    _this.state = {\n      date: _this.props.date || (0, _xdate.default)().toString('yyyy-MM-dd'),\n      updateSource: UPDATE_SOURCES.CALENDAR_INIT,\n      buttonY: new _reactNative.Animated.Value(-props.todayBottomMargin || -TOP_POSITION),\n      buttonIcon: _this.getButtonIcon(props.date),\n      disabled: false,\n      opacity: new _reactNative.Animated.Value(1)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CalendarProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.date !== this.props.date) {\n        this.setDate(this.props.date, UPDATE_SOURCES.PROP_UPDATE);\n      }\n    }\n  }, {\n    key: \"getButtonIcon\",\n    value: function getButtonIcon(date) {\n      if (!this.props.showTodayButton) {\n        return;\n      }\n\n      var isPastDate = this.isPastDate(date);\n      return isPastDate ? iconDown : iconUp;\n    }\n  }, {\n    key: \"isPastDate\",\n    value: function isPastDate(date) {\n      var today = (0, _xdate.default)();\n      var d = (0, _xdate.default)(date);\n\n      if (today.getFullYear() > d.getFullYear()) {\n        return true;\n      }\n\n      if (today.getFullYear() === d.getFullYear()) {\n        if (today.getMonth() > d.getMonth()) {\n          return true;\n        }\n\n        if (today.getMonth() === d.getMonth()) {\n          if (today.getDate() > d.getDate()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"animateTodayButton\",\n    value: function animateTodayButton(date) {\n      if (this.props.showTodayButton) {\n        var today = (0, _xdate.default)().toString('yyyy-MM-dd');\n        var isToday = today === date;\n\n        _reactNative.Animated.spring(this.state.buttonY, {\n          toValue: isToday ? TOP_POSITION : -this.props.todayBottomMargin || -TOP_POSITION,\n          tension: 30,\n          friction: 8,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"animateOpacity\",\n    value: function animateOpacity(disabled) {\n      var disabledOpacity = this.props.disabledOpacity;\n\n      if (disabledOpacity) {\n        _reactNative.Animated.timing(this.state.opacity, {\n          toValue: disabled ? disabledOpacity : 1,\n          duration: 500,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"renderTodayButton\",\n    value: function renderTodayButton() {\n      var _this$state = this.state,\n          disabled = _this$state.disabled,\n          opacity = _this$state.opacity,\n          buttonY = _this$state.buttonY,\n          buttonIcon = _this$state.buttonIcon;\n      var todayString = _xdate.default.locales[_xdate.default.defaultLocale].today || commons.todayString;\n      var today = todayString.charAt(0).toUpperCase() + todayString.slice(1);\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [this.style.todayButtonContainer, {\n          transform: [{\n            translateY: buttonY\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: [this.style.todayButton, this.props.todayButtonStyle],\n        onPress: this.onTodayPress,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Animated.Image, {\n        style: [this.style.todayButtonImage, {\n          opacity: opacity\n        }],\n        source: buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.Animated.Text, {\n        allowFontScaling: false,\n        style: [this.style.todayButtonText, {\n          opacity: opacity\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, today)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_calendarContext.default.Provider, {\n        value: this.getProviderContextValue(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [{\n          flex: 1\n        }, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, this.props.children), this.props.showTodayButton && this.renderTodayButton());\n    }\n  }]);\n  return CalendarProvider;\n}(_react.Component);\n\nCalendarProvider.displayName = 'CalendarProvider';\nCalendarProvider.propTypes = {\n  date: _propTypes.default.any.isRequired,\n  onDateChanged: _propTypes.default.func,\n  onMonthChange: _propTypes.default.func,\n  showTodayButton: _propTypes.default.bool,\n  todayBottomMargin: _propTypes.default.number,\n  todayButtonStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  disabledOpacity: _propTypes.default.number\n};\nvar _default = CalendarProvider;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/oryan/Desktop/BookMeX/BookMexFrontEnd/node_modules/react-native-calendars/src/expandableCalendar/calendarProvider.js"],"names":["commons","require","UPDATE_SOURCES","iconDown","iconUp","TOP_POSITION","CalendarProvider","props","getProviderContextValue","setDate","date","state","updateSource","setDisabled","sameMonth","dateutils","setState","buttonIcon","getButtonIcon","animateTodayButton","_","invoke","disabled","showTodayButton","animateOpacity","onTodayPress","today","toString","TODAY_PRESS","style","theme","CALENDAR_INIT","buttonY","Animated","Value","todayBottomMargin","opacity","prevProps","PROP_UPDATE","isPastDate","d","getFullYear","getMonth","getDate","isToday","spring","toValue","tension","friction","useNativeDriver","start","disabledOpacity","timing","duration","todayString","XDate","locales","defaultLocale","charAt","toUpperCase","slice","todayButtonContainer","transform","translateY","todayButton","todayButtonStyle","todayButtonImage","todayButtonText","flex","children","renderTodayButton","Component","displayName","propTypes","PropTypes","any","isRequired","onDateChanged","func","onMonthChange","bool","number","oneOfType","object","array"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {Animated, TouchableOpacity, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport dateutils from '../dateutils';\nimport {xdateToData} from '../interface';\nimport styleConstructor from './style';\nimport CalendarContext from './calendarContext';\n\n\nconst commons = require('./commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\nconst iconDown = require('../img/down.png');\nconst iconUp = require('../img/up.png');\nconst TOP_POSITION = 65;\n\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass CalendarProvider extends Component {\n  static displayName = 'CalendarProvider';\n\n  static propTypes = {\n    /** Initial date in 'yyyy-MM-dd' format. Default = Date() */\n    date: PropTypes.any.isRequired,\n    /** Callback for date change event */\n    onDateChanged: PropTypes.func,\n    /** Callback for month change event */\n    onMonthChange: PropTypes.func,\n    /** Whether to show the today button */\n    showTodayButton: PropTypes.bool,\n    /** Today button's top position */\n    todayBottomMargin: PropTypes.number,\n    /** Today button's style */\n    todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** The opacity for the disabled today button (0-1) */\n    disabledOpacity: PropTypes.number\n  }\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n\n    this.state = {\n      date: this.props.date || XDate().toString('yyyy-MM-dd'),\n      updateSource: UPDATE_SOURCES.CALENDAR_INIT,\n      buttonY: new Animated.Value(-props.todayBottomMargin || -TOP_POSITION),\n      buttonIcon: this.getButtonIcon(props.date),\n      disabled: false,\n      opacity: new Animated.Value(1)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.date !== this.props.date) {\n      this.setDate(this.props.date, UPDATE_SOURCES.PROP_UPDATE);\n    }\n  }\n\n  getProviderContextValue = () => {\n    return {\n      setDate: this.setDate,\n      date: this.state.date,\n      updateSource: this.state.updateSource,\n      setDisabled: this.setDisabled\n    };\n  };\n\n  setDate = (date, updateSource) => {\n    const sameMonth = dateutils.sameMonth(XDate(date), XDate(this.state.date));\n\n    this.setState({date, updateSource, buttonIcon: this.getButtonIcon(date)}, () => {\n      this.animateTodayButton(date);\n    });\n\n    _.invoke(this.props, 'onDateChanged', date, updateSource);\n\n    if (!sameMonth) {\n      _.invoke(this.props, 'onMonthChange', xdateToData(XDate(date)), updateSource);\n    }\n  }\n\n  setDisabled = (disabled) => {\n    if (this.props.showTodayButton && disabled !== this.state.disabled) {\n      this.setState({disabled});\n      this.animateOpacity(disabled);\n    }\n  }\n\n  getButtonIcon(date) {\n    if (!this.props.showTodayButton) {\n      return;\n    }\n    const isPastDate = this.isPastDate(date);\n    return isPastDate ? iconDown : iconUp;\n  }\n\n  isPastDate(date) {\n    const today = XDate();\n    const d = XDate(date);\n\n    if (today.getFullYear() > d.getFullYear()) {\n      return true;\n    }\n    if (today.getFullYear() === d.getFullYear()) {\n      if (today.getMonth() > d.getMonth()) {\n        return true;\n      }\n      if (today.getMonth() === d.getMonth()) {\n        if (today.getDate() > d.getDate()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  animateTodayButton(date) {\n    if (this.props.showTodayButton) {\n      const today = XDate().toString('yyyy-MM-dd');\n      const isToday = today === date;\n\n      Animated.spring(this.state.buttonY, {\n        toValue: isToday ? TOP_POSITION : -this.props.todayBottomMargin || -TOP_POSITION,\n        tension: 30,\n        friction: 8,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  animateOpacity(disabled) {\n    const {disabledOpacity} = this.props;\n    if (disabledOpacity) {\n      Animated.timing(this.state.opacity, {\n        toValue: disabled ? disabledOpacity : 1,\n        duration: 500,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  onTodayPress = () => {\n    const today = XDate().toString('yyyy-MM-dd');\n    this.setDate(today, UPDATE_SOURCES.TODAY_PRESS);\n  }\n\n  renderTodayButton() {\n    const {disabled, opacity, buttonY, buttonIcon} = this.state;\n    const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n    const today = todayString.charAt(0).toUpperCase() + todayString.slice(1);\n\n    return (\n      <Animated.View style={[this.style.todayButtonContainer, {transform: [{translateY: buttonY}]}]}>\n        <TouchableOpacity style={[this.style.todayButton, this.props.todayButtonStyle]} onPress={this.onTodayPress} disabled={disabled}>\n          <Animated.Image style={[this.style.todayButtonImage, {opacity}]} source={buttonIcon}/>\n          <Animated.Text allowFontScaling={false} style={[this.style.todayButtonText, {opacity}]}>{today}</Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <CalendarContext.Provider value={this.getProviderContextValue()}>\n        <View style={[{flex: 1}, this.props.style]}>\n          {this.props.children}\n        </View>\n        {this.props.showTodayButton && this.renderTodayButton()}\n      </CalendarContext.Provider>\n    );\n  }\n}\n\nexport default CalendarProvider;\n"]},"metadata":{},"sourceType":"script"}