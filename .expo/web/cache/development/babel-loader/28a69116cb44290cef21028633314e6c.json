{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nvar _State = _interopRequireDefault(require(\"../State\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PanGestureHandler = function (_DraggingGestureHandl) {\n  (0, _inherits2.default)(PanGestureHandler, _DraggingGestureHandl);\n\n  var _super = _createSuper(PanGestureHandler);\n\n  function PanGestureHandler() {\n    (0, _classCallCheck2.default)(this, PanGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(PanGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pan';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Pan;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, (0, _get2.default)((0, _getPrototypeOf2.default)(PanGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        direction: this.getDirection()\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var nextState = (0, _get2.default)((0, _getPrototypeOf2.default)(PanGestureHandler.prototype), \"getState\", this).call(this, type);\n\n      if (this.previousState === _State.default.UNDETERMINED && nextState === _State.default.ACTIVE) {\n        return _State.default.BEGAN;\n      }\n\n      return nextState;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var config = this.getConfig();\n      var activeOffsetXStart = config.activeOffsetXStart,\n          activeOffsetXEnd = config.activeOffsetXEnd,\n          activeOffsetYStart = config.activeOffsetYStart,\n          activeOffsetYEnd = config.activeOffsetYEnd,\n          minDist = config.minDist;\n      var directions = [];\n      var horizontalDirections = [];\n\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      if (!(0, _utils.isnan)(activeOffsetXStart)) horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      if (horizontalDirections.length === 2) horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      directions = directions.concat(horizontalDirections);\n      var verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      if (verticalDirections.length === 2) verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      directions = directions.concat(verticalDirections);\n\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      return directions[0];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this._hasCustomActivationCriteria) {\n        return {\n          minDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, criteria) {\n      var deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY;\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n  }, {\n    key: \"shouldActivateUnderCustomCriteria\",\n    value: function shouldActivateUnderCustomCriteria(_ref2, criteria) {\n      var deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY,\n          velocity = _ref2.velocity;\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n  }, {\n    key: \"shouldMultiFingerPanFail\",\n    value: function shouldMultiFingerPanFail(_ref3) {\n      var pointerLength = _ref3.pointerLength,\n          scale = _ref3.scale,\n          deltaRotation = _ref3.deltaRotation;\n\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      var deltaScale = Math.abs(scale - 1);\n      var absDeltaRotation = Math.abs(deltaRotation);\n\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        return true;\n      }\n\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(props, recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n\n      var velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n\n      if (this._hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity: velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n\n        return {\n          success: true\n        };\n      }\n\n      return {\n        success: false\n      };\n    }\n  }]);\n  return PanGestureHandler;\n}(_DraggingGestureHandler.default);\n\nfunction validateConfig() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var isNum = function isNum(v) {\n    return (0, _utils.isnan)(v) || typeof v === 'number';\n  };\n\n  var isBool = function isBool(v) {\n    return typeof v === 'boolean';\n  };\n\n  var valid = {\n    enabled: isBool,\n    minDistSq: isNum,\n    minVelocityX: isNum,\n    minVelocityY: isNum,\n    minVelocity: isNum,\n    minVelocitySq: isNum,\n    activeOffsetXStart: isNum,\n    activeOffsetXEnd: isNum,\n    failOffsetXStart: isNum,\n    failOffsetXEnd: isNum,\n    activeOffsetYStart: isNum,\n    activeOffsetYEnd: isNum,\n    failOffsetYStart: isNum,\n    failOffsetYEnd: isNum,\n    hasCustomActivationCriteria: isBool,\n    minPointers: isNum,\n    maxPointers: isNum\n  };\n  var keys = Object.keys(valid);\n  var invalidKeys = [];\n\n  for (var _i = 0, _Object$keys = Object.keys(config); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (keys.includes(key)) {\n      if (valid[key](config[key])) {\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\n      }\n    } else {\n      invalidKeys.push(key);\n    }\n  }\n\n  if (invalidKeys.length) {\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\n  }\n\n  return config;\n}\n\nvar _default = PanGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ometz/Desktop/עומר/מסמכים/GitHub/BookMeX/node_modules/react-native-gesture-handler/web/PanGestureHandler.js"],"names":["PanGestureHandler","Hammer","Pan","direction","getDirection","type","nextState","previousState","State","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","_hasCustomActivationCriteria","minDistSq","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","velocity","x","y","minVelocityX","minVelocityY","minVelocitySq","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","props","recognizer","inputData","shouldFailUnderCustomCriteria","failed","velocityX","velocityY","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","maxPointers","success","DraggingGestureHandler","validateConfig","isNum","v","isBool","valid","enabled","minVelocity","hasCustomActivationCriteria","minPointers","keys","Object","invalidKeys","key","includes","console","warn","Error","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAIA;;AACA;;AACA;;;;;;;;;;IAEMA,iB;;;;;;;;;;;;SACJ,eAAW;AACT,aAAO,KAAP;AACD;;;SAED,eAAyB;AACvB,aAAOC,kBAAOC,GAAd;AACD;;;WAED,2BAAkB;AAChB;AAEEC,QAAAA,SAAS,EAAE,KAAKC,YAAL;AAFb;AAID;;;WAED,kBAASC,IAAT,EAAe;AACb,UAAMC,SAAS,+GAAkBD,IAAlB,CAAf;;AAEA,UACE,KAAKE,aAAL,KAAuBC,eAAMC,YAA7B,IACAH,SAAS,KAAKE,eAAME,MAFtB,EAGE;AACA,eAAOF,eAAMG,KAAb;AACD;;AACD,aAAOL,SAAP;AACD;;;WAED,wBAAe;AACb,UAAMM,MAAM,GAAG,KAAKC,SAAL,EAAf;AADa,UAGXC,kBAHW,GAQTF,MARS,CAGXE,kBAHW;AAAA,UAIXC,gBAJW,GAQTH,MARS,CAIXG,gBAJW;AAAA,UAKXC,kBALW,GAQTJ,MARS,CAKXI,kBALW;AAAA,UAMXC,gBANW,GAQTL,MARS,CAMXK,gBANW;AAAA,UAOXC,OAPW,GAQTN,MARS,CAOXM,OAPW;AASb,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,oBAAoB,GAAG,EAA3B;;AAEA,UAAI,CAAC,kBAAMF,OAAN,CAAL,EAAqB;AACnB,eAAOjB,kBAAOoB,aAAd;AACD;;AAED,UAAI,CAAC,kBAAMP,kBAAN,CAAL,EACEM,oBAAoB,CAACE,IAArB,CAA0BrB,kBAAOsB,cAAjC;AACF,UAAI,CAAC,kBAAMR,gBAAN,CAAL,EACEK,oBAAoB,CAACE,IAArB,CAA0BrB,kBAAOuB,eAAjC;AACF,UAAIJ,oBAAoB,CAACK,MAArB,KAAgC,CAApC,EACEL,oBAAoB,GAAG,CAACnB,kBAAOyB,oBAAR,CAAvB;AAEFP,MAAAA,UAAU,GAAGA,UAAU,CAACQ,MAAX,CAAkBP,oBAAlB,CAAb;AACA,UAAIQ,kBAAkB,GAAG,EAAzB;AAEA,UAAI,CAAC,kBAAMZ,kBAAN,CAAL,EACEY,kBAAkB,CAACN,IAAnB,CAAwBrB,kBAAO4B,YAA/B;AACF,UAAI,CAAC,kBAAMZ,gBAAN,CAAL,EACEW,kBAAkB,CAACN,IAAnB,CAAwBrB,kBAAO6B,cAA/B;AAEF,UAAIF,kBAAkB,CAACH,MAAnB,KAA8B,CAAlC,EACEG,kBAAkB,GAAG,CAAC3B,kBAAO8B,kBAAR,CAArB;AAEFZ,MAAAA,UAAU,GAAGA,UAAU,CAACQ,MAAX,CAAkBC,kBAAlB,CAAb;;AAEA,UAAI,CAACT,UAAU,CAACM,MAAhB,EAAwB;AACtB,eAAOxB,kBAAO+B,cAAd;AACD;;AACD,UACEb,UAAU,CAAC,CAAD,CAAV,KAAkBlB,kBAAOyB,oBAAzB,IACAP,UAAU,CAAC,CAAD,CAAV,KAAkBlB,kBAAO8B,kBAF3B,EAGE;AACA,eAAO9B,kBAAOoB,aAAd;AACD;;AACD,UAAID,oBAAoB,CAACK,MAArB,IAA+BG,kBAAkB,CAACH,MAAtD,EAA8D;AAC5D,eAAOxB,kBAAOoB,aAAd;AACD;;AAED,aAAOF,UAAU,CAAC,CAAD,CAAjB;AACD;;;WAED,qBAAY;AACV,UAAI,CAAC,KAAKc,4BAAV,EAAwC;AAGtC,eAAO;AACLC,UAAAA,SAAS,EAAE;AADN,SAAP;AAGD;;AACD,aAAO,KAAKtB,MAAZ;AACD;;;WAED,6CAAkDuB,QAAlD,EAA4D;AAAA,UAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,UAApBC,MAAoB,QAApBA,MAAoB;AAC1D,aACG,CAAC,kBAAMF,QAAQ,CAACG,gBAAf,CAAD,IACCF,MAAM,GAAGD,QAAQ,CAACG,gBADpB,IAEC,CAAC,kBAAMH,QAAQ,CAACI,cAAf,CAAD,IAAmCH,MAAM,GAAGD,QAAQ,CAACI,cAFtD,IAGC,CAAC,kBAAMJ,QAAQ,CAACK,gBAAf,CAAD,IACCH,MAAM,GAAGF,QAAQ,CAACK,gBAJpB,IAKC,CAAC,kBAAML,QAAQ,CAACM,cAAf,CAAD,IAAmCJ,MAAM,GAAGF,QAAQ,CAACM,cANxD;AAQD;;;WAED,kDAAgEN,QAAhE,EAA0E;AAAA,UAAtCC,MAAsC,SAAtCA,MAAsC;AAAA,UAA9BC,MAA8B,SAA9BA,MAA8B;AAAA,UAAtBK,QAAsB,SAAtBA,QAAsB;AACxE,aACG,CAAC,kBAAMP,QAAQ,CAACrB,kBAAf,CAAD,IACCsB,MAAM,GAAGD,QAAQ,CAACrB,kBADpB,IAEC,CAAC,kBAAMqB,QAAQ,CAACpB,gBAAf,CAAD,IACCqB,MAAM,GAAGD,QAAQ,CAACpB,gBAHpB,IAIC,CAAC,kBAAMoB,QAAQ,CAACnB,kBAAf,CAAD,IACCqB,MAAM,GAAGF,QAAQ,CAACnB,kBALpB,IAMC,CAAC,kBAAMmB,QAAQ,CAAClB,gBAAf,CAAD,IACCoB,MAAM,GAAGF,QAAQ,CAAClB,gBAPpB,IAQA,gCACE,uBAAW;AAAE0B,QAAAA,CAAC,EAAEP,MAAL;AAAaQ,QAAAA,CAAC,EAAEP;AAAhB,OAAX,CADF,EAEEF,QAAQ,CAACD,SAFX,CARA,IAYA,gCAAoBQ,QAAQ,CAACC,CAA7B,EAAgCR,QAAQ,CAACU,YAAzC,CAZA,IAaA,gCAAoBH,QAAQ,CAACE,CAA7B,EAAgCT,QAAQ,CAACW,YAAzC,CAbA,IAcA,gCAAoB,uBAAWJ,QAAX,CAApB,EAA0CP,QAAQ,CAACY,aAAnD,CAfF;AAiBD;;;WAED,yCAAkE;AAAA,UAAvCC,aAAuC,SAAvCA,aAAuC;AAAA,UAAxBC,KAAwB,SAAxBA,KAAwB;AAAA,UAAjBC,aAAiB,SAAjBA,aAAiB;;AAChE,UAAIF,aAAa,IAAI,CAArB,EAAwB;AACtB,eAAO,KAAP;AACD;;AAGD,UAAMG,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,GAAG,CAAjB,CAAnB;AACA,UAAMK,gBAAgB,GAAGF,IAAI,CAACC,GAAL,CAASH,aAAT,CAAzB;;AACA,UAAIC,UAAU,GAAGI,+CAAjB,EAAuD;AAGrD,eAAO,IAAP;AACD;;AACD,UAAID,gBAAgB,GAAGE,kDAAvB,EAAgE;AAG9D,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;;WAED,2CAAkCrB,QAAlC,EAA4C;AAC1C,aACE,0BAAcA,QAAQ,CAACD,SAAvB,KACA,0BAAcC,QAAQ,CAACU,YAAvB,CADA,IAEA,0BAAcV,QAAQ,CAACW,YAAvB,CAFA,IAGA,0BAAcX,QAAQ,CAACY,aAAvB,CAHA,IAIA,0BAAcZ,QAAQ,CAACrB,kBAAvB,CAJA,IAKA,0BAAcqB,QAAQ,CAACpB,gBAAvB,CALA,IAMA,0BAAcoB,QAAQ,CAACnB,kBAAvB,CANA,IAOA,0BAAcmB,QAAQ,CAAClB,gBAAvB,CARF;AAUD;;;WAED,kCAAyBwC,KAAzB,EAAgCC,UAAhC,EAA4CC,SAA5C,EAAuD;AACrD,UAAI,KAAKC,6BAAL,CAAmCD,SAAnC,EAA8CF,KAA9C,CAAJ,EAA0D;AACxD,eAAO;AAAEI,UAAAA,MAAM,EAAE;AAAV,SAAP;AACD;;AAED,UAAMnB,QAAQ,GAAG;AAAEC,QAAAA,CAAC,EAAEgB,SAAS,CAACG,SAAf;AAA0BlB,QAAAA,CAAC,EAAEe,SAAS,CAACI;AAAvC,OAAjB;;AACA,UACE,KAAK9B,4BAAL,IACA,KAAK+B,iCAAL,CACE;AAAE5B,QAAAA,MAAM,EAAEuB,SAAS,CAACvB,MAApB;AAA4BC,QAAAA,MAAM,EAAEsB,SAAS,CAACtB,MAA9C;AAAsDK,QAAAA,QAAQ,EAARA;AAAtD,OADF,EAEEe,KAFF,CAFF,EAME;AACA,YACE,KAAKQ,wBAAL,CAA8B;AAC5BjB,UAAAA,aAAa,EAAEW,SAAS,CAACO,WADG;AAE5BjB,UAAAA,KAAK,EAAEU,SAAS,CAACV,KAFW;AAG5BC,UAAAA,aAAa,EAAES,SAAS,CAACT;AAHG,SAA9B,CADF,EAME;AACA,iBAAO;AACLW,YAAAA,MAAM,EAAE;AADH,WAAP;AAGD;;AACD,eAAO;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAP;AACD;;AACD,aAAO;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD;;;EAxL6BC,+B;;AA2LhC,SAASC,cAAT,GAAqC;AAAA,MAAbzD,MAAa,uEAAJ,EAAI;;AACnC,MAAM0D,KAAK,GAAG,SAARA,KAAQ,CAAAC,CAAC;AAAA,WAAI,kBAAMA,CAAN,KAAY,OAAOA,CAAP,KAAa,QAA7B;AAAA,GAAf;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAAD,CAAC;AAAA,WAAI,OAAOA,CAAP,KAAa,SAAjB;AAAA,GAAhB;;AAEA,MAAME,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAEF,MADG;AAEZtC,IAAAA,SAAS,EAAEoC,KAFC;AAGZzB,IAAAA,YAAY,EAAEyB,KAHF;AAIZxB,IAAAA,YAAY,EAAEwB,KAJF;AAMZK,IAAAA,WAAW,EAAEL,KAND;AAOZvB,IAAAA,aAAa,EAAEuB,KAPH;AAQZxD,IAAAA,kBAAkB,EAAEwD,KARR;AASZvD,IAAAA,gBAAgB,EAAEuD,KATN;AAUZhC,IAAAA,gBAAgB,EAAEgC,KAVN;AAWZ/B,IAAAA,cAAc,EAAE+B,KAXJ;AAYZtD,IAAAA,kBAAkB,EAAEsD,KAZR;AAaZrD,IAAAA,gBAAgB,EAAEqD,KAbN;AAcZ9B,IAAAA,gBAAgB,EAAE8B,KAdN;AAeZ7B,IAAAA,cAAc,EAAE6B,KAfJ;AAgBZM,IAAAA,2BAA2B,EAAEJ,MAhBjB;AAiBZK,IAAAA,WAAW,EAAEP,KAjBD;AAkBZJ,IAAAA,WAAW,EAAEI;AAlBD,GAAd;AAoBA,MAAMQ,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,KAAZ,CAAb;AAEA,MAAIO,WAAW,GAAG,EAAlB;;AACA,kCAAkBD,MAAM,CAACD,IAAP,CAAYlE,MAAZ,CAAlB,kCAAuC;AAAlC,QAAMqE,GAAG,mBAAT;;AACH,QAAIH,IAAI,CAACI,QAAL,CAAcD,GAAd,CAAJ,EAAwB;AACtB,UAAIR,KAAK,CAACQ,GAAD,CAAL,CAAWrE,MAAM,CAACqE,GAAD,CAAjB,CAAJ,EAA6B;AAC3BE,QAAAA,OAAO,CAACC,IAAR,CAAa,mBAAmBH,GAAnB,GAAyB,IAAzB,GAAgCrE,MAAM,CAACqE,GAAD,CAAnD;AACD;AACF,KAJD,MAIO;AACLD,MAAAA,WAAW,CAAC1D,IAAZ,CAAiB2D,GAAjB;AACD;AACF;;AAED,MAAID,WAAW,CAACvD,MAAhB,EAAwB;AACtB,UAAM,IAAI4D,KAAJ,CAAU,iCAAiCL,WAAW,CAACM,IAAZ,CAAiB,IAAjB,CAA3C,CAAN;AACD;;AACD,SAAO1E,MAAP;AACD;;eAEcZ,iB","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport {\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport State from '../State';\n\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria({ deltaX, deltaY }, criteria) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria({ deltaX, deltaY, velocity }, criteria) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({ pointerLength, scale, deltaRotation }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(criteria) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(props, recognizer, inputData) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this._hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nfunction validateConfig(config = {}) {\n  const isNum = v => isnan(v) || typeof v === 'number';\n  const isBool = v => typeof v === 'boolean';\n\n  const valid = {\n    enabled: isBool,\n    minDistSq: isNum,\n    minVelocityX: isNum,\n    minVelocityY: isNum,\n    // TODO: Bacon: remove `minVelocity`\n    minVelocity: isNum,\n    minVelocitySq: isNum,\n    activeOffsetXStart: isNum,\n    activeOffsetXEnd: isNum,\n    failOffsetXStart: isNum,\n    failOffsetXEnd: isNum,\n    activeOffsetYStart: isNum,\n    activeOffsetYEnd: isNum,\n    failOffsetYStart: isNum,\n    failOffsetYEnd: isNum,\n    hasCustomActivationCriteria: isBool,\n    minPointers: isNum,\n    maxPointers: isNum,\n  };\n  const keys = Object.keys(valid);\n\n  let invalidKeys = [];\n  for (const key of Object.keys(config)) {\n    if (keys.includes(key)) {\n      if (valid[key](config[key])) {\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\n      }\n    } else {\n      invalidKeys.push(key);\n    }\n  }\n\n  if (invalidKeys.length) {\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\n  }\n  return config;\n}\n\nexport default PanGestureHandler;\n"]},"metadata":{},"sourceType":"script"}