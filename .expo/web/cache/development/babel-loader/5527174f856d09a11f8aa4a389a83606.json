{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataTableHeader = exports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _colors = require(\"../../styles/colors\");\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DataTableHeader = function DataTableHeader(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"style\", \"theme\"]);\n  var borderBottomColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();\n  return React.createElement(_reactNative.View, _extends({}, rest, {\n    style: [styles.header, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), children);\n};\n\nexports.DataTableHeader = DataTableHeader;\nDataTableHeader.displayName = 'DataTable.Header';\n\nvar styles = _reactNative.StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth * 2\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DataTableHeader);\n\nexports.default = _default;","map":{"version":3,"sources":["DataTableHeader.tsx"],"names":["DataTableHeader","rest","borderBottomColor","color","theme","styles","header","flexDirection","height","paddingHorizontal","borderBottomWidth","StyleSheet","withTheme"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AA+CA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAgD;AAAA,MAA/C,QAA+C,QAA/C,QAA+C;AAAA,MAA/C,KAA+C,QAA/C,KAA+C;AAAA,MAA/C,KAA+C,QAA/C,KAA+C;AAAA,MAAlBC,IAAkB;AACtE,MAAMC,iBAAiB,GAAGC,oBAAMC,KAAK,CAALA,IAAAA,GAAAA,aAAAA,GAAND,aAAAA,EAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B;AAKA,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAgB,IAAA,KAAK,EAAE,CAACE,MAAM,CAAP,MAAA,EAAgB;AAAEH,MAAAA,iBAAAA,EAAAA;AAAF,KAAhB,EAAA,KAAA;AAAvB,GAAA,CAAA,EADF,QACE,CADF;AANF,CAAA;;;AAaAF,eAAe,CAAfA,WAAAA,GAAAA,kBAAAA;;AAEA,IAAMK,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EADP,KAAA;AAENC,IAAAA,MAAM,EAFA,EAAA;AAGNC,IAAAA,iBAAiB,EAHX,EAAA;AAINC,IAAAA,iBAAiB,EAAEC,wBAAAA,aAAAA,GAA2B;AAJxC;AADuB,CAAlB,CAAf;;eASeC,wBAAf,eAAeA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n"]},"metadata":{},"sourceType":"script"}