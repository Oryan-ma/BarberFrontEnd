{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeCalendars = require(\"react-native-calendars\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\oryan\\\\Desktop\\\\BookMeX\\\\BookMexFrontEnd\\\\src\\\\screens\\\\calender.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar EVENTS = [{\n  start: '2017-09-07 00:30:00',\n  end: '2017-09-07 01:30:00',\n  title: 'תספורת',\n  summary: 'Visit Grand Mother and bring some fruits.',\n  color: '#ade6d8'\n}, {\n  start: '2017-09-07 02:30:00',\n  end: '2017-09-07 03:20:00',\n  title: 'Meeting with Prof. Behjet Zuhaira',\n  summary: 'Meeting with Prof. Behjet at 130 in her office.',\n  color: '#e6add8'\n}, {\n  start: '2017-09-07 04:10:00',\n  end: '2017-09-07 04:40:00',\n  title: 'Tea Time with Dr. Hasan',\n  summary: 'Tea Time with Dr. Hasan, Talk about Project'\n}, {\n  start: '2017-09-08 01:40:00',\n  end: '2017-09-08 02:25:00',\n  title: 'Meet Sir Khurram Iqbal',\n  summary: 'Computer Science Dept. Comsats Islamabad',\n  color: '#e6bcad'\n}, {\n  start: '2017-09-08 04:10:00',\n  end: '2017-09-08 04:40:00',\n  title: 'Tea Time with Colleagues',\n  summary: 'WeRplay'\n}, {\n  start: '2017-09-08 00:45:00',\n  end: '2017-09-08 01:45:00',\n  title: 'Lets Play Apex Legends',\n  summary: 'with Boys at Work'\n}];\n\nvar TimelineCalendarScreen = function (_Component) {\n  (0, _inherits2.default)(TimelineCalendarScreen, _Component);\n\n  var _super = _createSuper(TimelineCalendarScreen);\n\n  function TimelineCalendarScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TimelineCalendarScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentDate: '2017-09-07'\n    };\n\n    _this.onDateChanged = function (date) {\n      _this.setState({\n        currentDate: date\n      });\n    };\n\n    _this.onMonthChange = function () {};\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n\n      if (_lodash.default.isEmpty(item)) {\n        return _this.renderEmptyItem();\n      }\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.item,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.itemHourText,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, item.hour), _react.default.createElement(_reactNative.Text, {\n        style: styles.itemDurationText,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, item.duration)), _react.default.createElement(_reactNative.Text, {\n        style: styles.itemTitleText,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, item.title), _react.default.createElement(_reactNative.View, {\n        style: styles.itemButtonContainer,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Button, {\n        title: 'Info',\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    _this.getTheme = function () {\n      var themeColor = '#0059ff';\n      var lightThemeColor = '#e6efff';\n      var disabledColor = '#a6acb1';\n      var black = '#20303c';\n      var white = '#ffffff';\n      return {\n        arrowColor: black,\n        arrowStyle: {\n          padding: 0\n        },\n        monthTextColor: black,\n        textMonthFontSize: 16,\n        textMonthFontFamily: 'HelveticaNeue',\n        textMonthFontWeight: 'bold',\n        textSectionTitleColor: black,\n        textDayHeaderFontSize: 12,\n        textDayHeaderFontFamily: 'HelveticaNeue',\n        textDayHeaderFontWeight: 'normal',\n        todayBackgroundColor: lightThemeColor,\n        todayTextColor: themeColor,\n        dayTextColor: themeColor,\n        textDayFontSize: 18,\n        textDayFontFamily: 'HelveticaNeue',\n        textDayFontWeight: '500',\n        textDayStyle: {\n          marginTop: _reactNative.Platform.OS === 'android' ? 2 : 4\n        },\n        selectedDayBackgroundColor: themeColor,\n        selectedDayTextColor: white,\n        textDisabledColor: disabledColor,\n        dotColor: themeColor,\n        selectedDotColor: white,\n        disabledDotColor: disabledColor,\n        dotStyle: {\n          marginTop: -2\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(TimelineCalendarScreen, [{\n    key: \"renderEmptyItem\",\n    value: function renderEmptyItem() {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.emptyItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.emptyItemText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \"No Events Planned\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNativeCalendars.CalendarProvider, {\n        date: this.state.currentDate,\n        onDateChanged: this.onDateChanged,\n        onMonthChange: this.onMonthChange,\n        theme: {\n          todayButtonTextColor: '#0059ff'\n        },\n        showTodayButton: true,\n        disabledOpacity: 0.6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeCalendars.ExpandableCalendar, {\n        firstDay: 1,\n        theme: this.getTheme(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeCalendars.Timeline, {\n        format24h: true,\n        eventTapped: function eventTapped(e) {\n          return e;\n        },\n        events: EVENTS.filter(function (event) {\n          return (0, _moment.default)(event.start).isSame(_this2.state.currentDate, 'day');\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return TimelineCalendarScreen;\n}(_react.Component);\n\nexports.default = TimelineCalendarScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  calendar: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  section: {\n    backgroundColor: '#f0f4f7',\n    color: '#79838a'\n  },\n  item: {\n    padding: 20,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e8ecf0',\n    flexDirection: 'row'\n  },\n  itemHourText: {\n    color: 'black'\n  },\n  itemDurationText: {\n    color: 'grey',\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 4\n  },\n  itemTitleText: {\n    color: 'black',\n    marginLeft: 16,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  itemButtonContainer: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  emptyItem: {\n    paddingLeft: 20,\n    height: 52,\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e8ecf0'\n  },\n  emptyItemText: {\n    color: '#79838a',\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["C:/Users/oryan/Desktop/BookMeX/BookMexFrontEnd/src/screens/calender.jsx"],"names":["EVENTS","start","end","title","summary","color","TimelineCalendarScreen","state","currentDate","onDateChanged","date","setState","onMonthChange","renderItem","item","_","isEmpty","renderEmptyItem","styles","itemHourText","hour","itemDurationText","duration","itemTitleText","itemButtonContainer","getTheme","themeColor","lightThemeColor","disabledColor","black","white","arrowColor","arrowStyle","padding","monthTextColor","textMonthFontSize","textMonthFontFamily","textMonthFontWeight","textSectionTitleColor","textDayHeaderFontSize","textDayHeaderFontFamily","textDayHeaderFontWeight","todayBackgroundColor","todayTextColor","dayTextColor","textDayFontSize","textDayFontFamily","textDayFontWeight","textDayStyle","marginTop","Platform","OS","selectedDayBackgroundColor","selectedDayTextColor","textDisabledColor","dotColor","selectedDotColor","disabledDotColor","dotStyle","emptyItem","emptyItemText","todayButtonTextColor","e","filter","event","isSame","Component","StyleSheet","create","calendar","paddingLeft","paddingRight","section","backgroundColor","borderBottomWidth","borderBottomColor","flexDirection","fontSize","marginLeft","fontWeight","flex","alignItems","height","justifyContent"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport React, {Component} from 'react';\r\nimport {Platform, StyleSheet, View, Text, TouchableOpacity, Button} from 'react-native';\r\nimport {ExpandableCalendar, Timeline, CalendarProvider} from 'react-native-calendars';\r\nimport moment from 'moment';\r\n\r\nconst EVENTS = [\r\n  {\r\n    \r\n  \r\n    start: '2017-09-07 00:30:00',\r\n    end: '2017-09-07 01:30:00',\r\n    title: 'תספורת',\r\n    summary: 'Visit Grand Mother and bring some fruits.',\r\n    color: '#ade6d8'\r\n  },\r\n  {\r\n    start: '2017-09-07 02:30:00',\r\n    end: '2017-09-07 03:20:00',\r\n    title: 'Meeting with Prof. Behjet Zuhaira',\r\n    summary: 'Meeting with Prof. Behjet at 130 in her office.',\r\n    color: '#e6add8'\r\n  },\r\n  {\r\n    start: '2017-09-07 04:10:00',\r\n    end: '2017-09-07 04:40:00',\r\n    title: 'Tea Time with Dr. Hasan',\r\n    summary: 'Tea Time with Dr. Hasan, Talk about Project'\r\n  },\r\n  {\r\n    start: '2017-09-08 01:40:00',\r\n    end: '2017-09-08 02:25:00',\r\n    title: 'Meet Sir Khurram Iqbal',\r\n    summary: 'Computer Science Dept. Comsats Islamabad',\r\n    color: '#e6bcad'\r\n  },\r\n  {\r\n    start: '2017-09-08 04:10:00',\r\n    end: '2017-09-08 04:40:00',\r\n    title: 'Tea Time with Colleagues',\r\n    summary: 'WeRplay'\r\n  },\r\n  {\r\n    start: '2017-09-08 00:45:00',\r\n    end: '2017-09-08 01:45:00',\r\n    title: 'Lets Play Apex Legends',\r\n    summary: 'with Boys at Work'\r\n  }\r\n];\r\n\r\nexport default class TimelineCalendarScreen extends Component {\r\n  state = {\r\n    currentDate: '2017-09-07'\r\n  };\r\n\r\n  onDateChanged = date => {\r\n    // console.warn('ExpandableCalendarScreen onDateChanged: ', date, updateSource);\r\n    // fetch and set data for date + week ahead\r\n    this.setState({currentDate: date});\r\n  };\r\n\r\n  onMonthChange = (/* month, updateSource */) => {\r\n    // console.warn('ExpandableCalendarScreen onMonthChange: ', month, updateSource);\r\n  };\r\n\r\n  renderEmptyItem() {\r\n    return (\r\n      <View style={styles.emptyItem}>\r\n        <Text style={styles.emptyItemText}>No Events Planned</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  renderItem = ({item}) => {\r\n    if (_.isEmpty(item)) {\r\n      return this.renderEmptyItem();\r\n    }\r\n\r\n    return (\r\n      <TouchableOpacity style={styles.item}>\r\n        <View>\r\n          <Text style={styles.itemHourText}>{item.hour}</Text>\r\n          <Text style={styles.itemDurationText}>{item.duration}</Text>\r\n        </View>\r\n        <Text style={styles.itemTitleText}>{item.title}</Text>\r\n        <View style={styles.itemButtonContainer}>\r\n          <Button title={'Info'} />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  getTheme = () => {\r\n    const themeColor = '#0059ff';\r\n    const lightThemeColor = '#e6efff';\r\n    const disabledColor = '#a6acb1';\r\n    const black = '#20303c';\r\n    const white = '#ffffff';\r\n\r\n    return {\r\n      // arrows\r\n      arrowColor: black,\r\n      arrowStyle: {padding: 0},\r\n      // month\r\n      monthTextColor: black,\r\n      textMonthFontSize: 16,\r\n      textMonthFontFamily: 'HelveticaNeue',\r\n      textMonthFontWeight: 'bold',\r\n      // day names\r\n      textSectionTitleColor: black,\r\n      textDayHeaderFontSize: 12,\r\n      textDayHeaderFontFamily: 'HelveticaNeue',\r\n      textDayHeaderFontWeight: 'normal',\r\n      // today\r\n      todayBackgroundColor: lightThemeColor,\r\n      todayTextColor: themeColor,\r\n      // dates\r\n      dayTextColor: themeColor,\r\n      textDayFontSize: 18,\r\n      textDayFontFamily: 'HelveticaNeue',\r\n      textDayFontWeight: '500',\r\n      textDayStyle: {marginTop: Platform.OS === 'android' ? 2 : 4},\r\n      // selected date\r\n      selectedDayBackgroundColor: themeColor,\r\n      selectedDayTextColor: white,\r\n      // disabled date\r\n      textDisabledColor: disabledColor,\r\n      // dot (marked date)\r\n      dotColor: themeColor,\r\n      selectedDotColor: white,\r\n      disabledDotColor: disabledColor,\r\n      dotStyle: {marginTop: -2}\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CalendarProvider\r\n        // date={ITEMS[0].title}\r\n        date={this.state.currentDate}\r\n        onDateChanged={this.onDateChanged}\r\n        onMonthChange={this.onMonthChange}\r\n        theme={{todayButtonTextColor: '#0059ff'}}\r\n        showTodayButton\r\n        disabledOpacity={0.6}\r\n        // todayBottomMargin={16}\r\n      >\r\n        <ExpandableCalendar\r\n          // horizontal={false}\r\n          // hideArrows\r\n          // disablePan\r\n          // hideKnob\r\n          // initialPosition={ExpandableCalendar.positions.OPEN}\r\n          firstDay={1}\r\n          // markedDates={this.getMarkedDates()} // {'2019-06-01': {marked: true}, '2019-06-02': {marked: true}, '2019-06-03': {marked: true}};\r\n          // markedDates={() => {}} // {'2019-06-01': {marked: true}, '2019-06-02': {marked: true}, '2019-06-03': {marked: true}};\r\n          theme={this.getTheme()}\r\n          //leftArrowImageSource={require('../img/previous.png')}\r\n         // rightArrowImageSource={require('../img/next.png')}\r\n          // calendarStyle={styles.calendar}\r\n          // headerStyle={styles.calendar} // for horizontal only\r\n          // disableWeekScroll\r\n        />\r\n        <Timeline\r\n          format24h={true}\r\n          eventTapped={e => e}\r\n          events={EVENTS.filter(event => moment(event.start).isSame(this.state.currentDate, 'day'))}\r\n          // scrollToFirst={true}\r\n          // start={0}\r\n          // end={24}\r\n        />\r\n      </CalendarProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20\r\n  },\r\n  section: {\r\n    backgroundColor: '#f0f4f7',\r\n    color: '#79838a'\r\n  },\r\n  item: {\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e8ecf0',\r\n    flexDirection: 'row'\r\n  },\r\n  itemHourText: {\r\n    color: 'black'\r\n  },\r\n  itemDurationText: {\r\n    color: 'grey',\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n    marginLeft: 4\r\n  },\r\n  itemTitleText: {\r\n    color: 'black',\r\n    marginLeft: 16,\r\n    fontWeight: 'bold',\r\n    fontSize: 16\r\n  },\r\n  itemButtonContainer: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  emptyItem: {\r\n    paddingLeft: 20,\r\n    height: 52,\r\n    justifyContent: 'center',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e8ecf0'\r\n  },\r\n  emptyItemText: {\r\n    color: '#79838a',\r\n    fontSize: 14\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}