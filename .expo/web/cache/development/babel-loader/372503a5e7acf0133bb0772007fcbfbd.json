{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppbarBackAction = exports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _AppbarAction = _interopRequireDefault(require(\"./AppbarAction\"));\n\nvar _AppbarBackIcon = _interopRequireDefault(require(\"./AppbarBackIcon\"));\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AppbarBackAction = function AppbarBackAction(_ref) {\n  var _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Back' : _ref$accessibilityLab,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"accessibilityLabel\"]);\n  return React.createElement(_AppbarAction.default, _extends({\n    accessibilityLabel: accessibilityLabel\n  }, rest, {\n    icon: _AppbarBackIcon.default\n  }));\n};\n\nexports.AppbarBackAction = AppbarBackAction;\nAppbarBackAction.displayName = 'Appbar.BackAction';\nvar _default = AppbarBackAction;\nexports.default = _default;","map":{"version":3,"sources":["AppbarBackAction.tsx"],"names":["AppbarBackAction","accessibilityLabel","rest","AppbarBackIcon"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;AA8DA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,mCAAGC,kBAAH;AAAA,MAAGA,kBAAH,sCAAC,MAAD;AAAA,MAAmCC,IAAnC;AAAA,SACvB,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA,QAAA,CAAA;AACE,IAAA,kBAAkB,EAAED;AADtB,GAAA,EAAA,IAAA,EAAA;AAGE,IAAA,IAAI,EAAEE;AAHR,GAAA,CAAA,CADuB;AAAA,CAAzB;;;AAQAH,gBAAgB,CAAhBA,WAAAA,GAAAA,mBAAAA;eAEA,gB","sourcesContent":["import * as React from 'react';\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\ntype Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarBackAction = ({ accessibilityLabel = 'Back', ...rest }: Props) => (\n  <AppbarAction\n    accessibilityLabel={accessibilityLabel}\n    {...rest}\n    icon={AppbarBackIcon}\n  />\n);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\n\nexport default AppbarBackAction;\n\n// @component-docs ignore-next-line\nexport { AppbarBackAction };\n"]},"metadata":{},"sourceType":"script"}