{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataTableRow = exports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\n\nvar _colors = require(\"../../styles/colors\");\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DataTableRow = function DataTableRow(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      theme = _ref.theme,\n      children = _ref.children,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"onPress\", \"style\", \"theme\", \"children\"]);\n  var borderBottomColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();\n  return React.createElement(_TouchableRipple.default, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), React.createElement(_reactNative.View, {\n    style: styles.content\n  }, children));\n};\n\nexports.DataTableRow = DataTableRow;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DataTableRow);\n\nexports.default = _default;","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","rest","borderBottomColor","color","theme","styles","content","container","borderStyle","borderBottomWidth","StyleSheet","minHeight","paddingHorizontal","flex","flexDirection","withTheme"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AA+CA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAAyD;AAAA,MAAxD,OAAwD,QAAxD,OAAwD;AAAA,MAAxD,KAAwD,QAAxD,KAAwD;AAAA,MAAxD,KAAwD,QAAxD,KAAwD;AAAA,MAAxD,QAAwD,QAAxD,QAAwD;AAAA,MAAlBC,IAAkB;AAC5E,MAAMC,iBAAiB,GAAGC,oBAAMC,KAAK,CAALA,IAAAA,GAAAA,aAAAA,GAAND,aAAAA,EAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B;AAKA,SACE,KAAA,CAAA,aAAA,CAAA,wBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,OAAO,EAFT,OAAA;AAGE,IAAA,KAAK,EAAE,CAACE,MAAM,CAAP,SAAA,EAAmB;AAAEH,MAAAA,iBAAAA,EAAAA;AAAF,KAAnB,EAAA,KAAA;AAHT,GAAA,CAAA,EAKE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC;AAApB,GAAA,EANJ,QAMI,CALF,CADF;AANF,CAAA;;;;AAiBA,IAAMD,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EADF,OAAA;AAETC,IAAAA,iBAAiB,EAAEC,wBAFV,aAAA;AAGTC,IAAAA,SAAS,EAHA,EAAA;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BN,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EADG,CAAA;AAEPC,IAAAA,aAAa,EAAE;AAFR;AAPsB,CAAlB,CAAf;;eAaeC,wBAAf,YAAeA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({ onPress, style, theme, children, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content}>{children}</View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"script"}