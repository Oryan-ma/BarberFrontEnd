{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PortalConsumer = function (_React$Component) {\n  (0, _inherits2.default)(PortalConsumer, _React$Component);\n\n  var _super = _createSuper(PortalConsumer);\n\n  function PortalConsumer() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PortalConsumer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"key\", void 0);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(PortalConsumer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regenerator.default.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.checkManager();\n              _context.next = 3;\n              return _regenerator.default.awrap(Promise.resolve());\n\n            case 3:\n              this.key = this.props.manager.mount(this.props.children);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkManager();\n      this.props.manager.update(this.key, this.props.children);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.checkManager();\n      this.props.manager.unmount(this.key);\n    }\n  }, {\n    key: \"checkManager\",\n    value: function checkManager() {\n      if (!this.props.manager) {\n        throw new Error('Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n' + \"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\" + 'https://callstack.github.io/react-native-paper/getting-started.html');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return PortalConsumer;\n}(React.Component);\n\nexports.default = PortalConsumer;","map":{"version":3,"sources":["PortalConsumer.tsx"],"names":["React","Promise","componentDidUpdate","componentWillUnmount","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;IAQe,c;;;;;AAAoD,4BAAA;AAAA;;AAAA;;AAAA,sCAAA,IAAA;AAAA,MAAA,IAAA;AAAA;;AAAA,oDAAA,IAAA;;AAAA,IAAA,eAAA,8CAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;AAAA;AAAA;;;;WACjE;AAAA;AAAA;AAAA;AAAA;AACE,mBADwB,YACxB;AADF;AAAA,gDAIQC,OAAO,CAAb,OAAMA,EAJR;;AAAA;AAME,mBAAA,GAAA,GAAW,KAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAyB,KAAA,KAAA,CAApC,QAAW,CAAX;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WASAC,8BAAqB;AACnB,WAAA,YAAA;AAEA,WAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAA0B,KAA1B,GAAA,EAAoC,KAAA,KAAA,CAApC,QAAA;AACD;;;WAEDC,gCAAuB;AACrB,WAAA,YAAA;AAEA,WAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAA2B,KAA3B,GAAA;AACD;;;WAID,wBAAuB;AACrB,UAAI,CAAC,KAAA,KAAA,CAAL,OAAA,EAAyB;AACvB,cAAM,IAAA,KAAA,CACJ,+GAAA,iGAAA,GADF,qEAAM,CAAN;AAKD;AACF;;;WAEDC,kBAAS;AACP,aAAA,IAAA;AACD;;;EApCyCJ,KAAK,CAAlC,S","sourcesContent":["import * as React from 'react';\nimport type { PortalMethods } from './PortalHost';\n\ntype Props = {\n  manager: PortalMethods;\n  children: React.ReactNode;\n};\n\nexport default class PortalConsumer extends React.Component<Props> {\n  async componentDidMount() {\n    this.checkManager();\n\n    // Delay updating to prevent React from going to infinite loop\n    await Promise.resolve();\n\n    this.key = this.props.manager.mount(this.props.children);\n  }\n\n  componentDidUpdate() {\n    this.checkManager();\n\n    this.props.manager.update(this.key, this.props.children);\n  }\n\n  componentWillUnmount() {\n    this.checkManager();\n\n    this.props.manager.unmount(this.key);\n  }\n\n  private key: any;\n\n  private checkManager() {\n    if (!this.props.manager) {\n      throw new Error(\n        'Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n' +\n          \"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\" +\n          'https://callstack.github.io/react-native-paper/getting-started.html'\n      );\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}