{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Divider = _interopRequireDefault(require(\"../Divider\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n      title = _ref.title,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"title\", \"theme\", \"style\"]);\n  var colors = theme.colors,\n      fonts = theme.fonts;\n  var titleColor = (0, _color.default)(colors.text).alpha(0.54).rgb().string();\n  var font = fonts.medium;\n  return React.createElement(_reactNative.View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(_reactNative.View, {\n    style: styles.titleContainer\n  }, React.createElement(_Text.default, {\n    numberOfLines: 1,\n    style: _objectSpread(_objectSpread({\n      color: titleColor\n    }, font), {}, {\n      marginLeft: 16\n    })\n  }, title)), children, React.createElement(_Divider.default, {\n    style: styles.divider\n  }));\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  divider: {\n    marginTop: 4\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DrawerSection);\n\nexports.default = _default;","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","rest","fonts","titleColor","color","colors","font","styles","title","titleContainer","marginLeft","divider","container","marginBottom","height","justifyContent","marginTop","withTheme"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAuD;AAAA,MAAtD,QAAsD,QAAtD,QAAsD;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAAtD,KAAsD,QAAtD,KAAsD;AAAA,MAAlBC,IAAkB;AAAA,MACrE,MADqE,GAC3E,KAD2E,CACrE,MADqE;AAAA,MAC3DC,KAD2D,GAC3E,KAD2E,CAC3DA,KAD2D;AAE3E,MAAMC,UAAU,GAAGC,oBAAMC,MAAM,CAAZD,IAAAA,EAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAnB,MAAmBA,EAAnB;AACA,MAAME,IAAI,GAAGJ,KAAK,CAAlB,MAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAAP,SAAA,EAAA,KAAA;AAAb,GAAA,EAAA,IAAA,CAAA,EACGC,KAAK,IACJ,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AACE,IAAA,aAAa,EADf,CAAA;AAEE,IAAA,KAAK;AAAIL,MAAAA,KAAK,EAAP;AAAF,OAAE,IAAF;AAAgCM,MAAAA,UAAU,EAAE;AAA5C;AAFP,GAAA,EAHN,KAGM,CADF,CAFJ,EAAA,QAAA,EAYE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAS,IAAA,KAAK,EAAEH,MAAM,CAACI;AAAvB,GAAA,CAZF,CADF;AALF,CAAA;;AAuBAX,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;;AAEA,IAAMO,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AADL,GADoB;AAI/BJ,EAAAA,cAAc,EAAE;AACdK,IAAAA,MAAM,EADQ,EAAA;AAEdC,IAAAA,cAAc,EAAE;AAFF,GAJe;AAQ/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,SAAS,EAAE;AADJ;AARsB,CAAlB,CAAf;;eAaeC,wBAAf,aAAeA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={styles.titleContainer}>\n          <Text\n            numberOfLines={1}\n            style={{ color: titleColor, ...font, marginLeft: 16 }}\n          >\n            {title}\n          </Text>\n        </View>\n      )}\n      {children}\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"script"}