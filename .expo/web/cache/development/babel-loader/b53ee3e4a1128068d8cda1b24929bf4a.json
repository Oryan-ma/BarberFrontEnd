{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderTitle;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _useTheme2 = _interopRequireDefault(require(\"../../../utils/useTheme\"));\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction HeaderTitle(_ref) {\n  var tintColor = _ref.tintColor,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"tintColor\", \"style\"]);\n\n  var _useTheme = (0, _useTheme2.default)(),\n      colors = _useTheme.colors;\n\n  return React.createElement(_reactNative.Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  title: _reactNative.Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"sources":["HeaderTitle.tsx"],"names":["rest","colors","styles","color","tintColor","title","ios","fontSize","fontWeight","android","fontFamily","default"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAQA;;;;;;;;;;;;;;;;;;;;AAQe,SAAA,WAAA,OAA2D;AAAA,MAAtC,SAAsC,QAAtC,SAAsC;AAAA,MAAtC,KAAsC,QAAtC,KAAsC;AAAA,MAAfA,IAAe;;AAAA,kBACxE,yBADwE;AAAA,MAChEC,MADgE,aAChEA,MADgE;;AAGxE,SACE,KAAA,CAAA,aAAA,CAAA,sBAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,iBAAiB,EADnB,QAAA;AAEE,kBAFF,GAAA;AAGE,IAAA,aAAa,EAAE;AAHjB,GAAA,EAAA,IAAA,EAAA;AAKE,IAAA,KAAK,EAAE,CACLC,MAAM,CADD,KAAA,EAEL;AAAEC,MAAAA,KAAK,EAAEC,SAAS,KAATA,SAAAA,GAA0BH,MAAM,CAAhCG,IAAAA,GAAwCA;AAAjD,KAFK,EAAA,KAAA;AALT,GAAA,CAAA,CADF;AAaD;;AAED,IAAMF,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BG,EAAAA,KAAK,EAAE,sBAAA,MAAA,CAAgB;AACrBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,QAAQ,EADL,EAAA;AAEHC,MAAAA,UAAU,EAAE;AAFT,KADgB;AAKrBC,IAAAA,OAAO,EAAE;AACPF,MAAAA,QAAQ,EADD,EAAA;AAEPG,MAAAA,UAAU,EAFH,mBAAA;AAGPF,MAAAA,UAAU,EAAE;AAHL,KALY;AAUrBG,IAAAA,OAAO,EAAE;AACPJ,MAAAA,QAAQ,EADD,EAAA;AAEPC,MAAAA,UAAU,EAAE;AAFL;AAVY,GAAhB;AADwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Platform,\n  TextProps,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport useTheme from '../../../utils/useTheme';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  children?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"script"}