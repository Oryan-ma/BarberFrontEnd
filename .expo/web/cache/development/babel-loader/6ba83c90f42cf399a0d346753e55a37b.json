{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Text = _interopRequireDefault(require(\"./Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyledText = function StyledText(_ref) {\n  var theme = _ref.theme,\n      alpha = _ref.alpha,\n      family = _ref.family,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"theme\", \"alpha\", \"family\", \"style\"]);\n  var textColor = (0, _color.default)(theme.colors.text).alpha(alpha).rgb().string();\n  var font = theme.fonts[family];\n  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(_Text.default, _extends({}, rest, {\n    style: [_objectSpread(_objectSpread({\n      color: textColor\n    }, font), {}, {\n      textAlign: 'left',\n      writingDirection: writingDirection\n    }), style]\n  }));\n};\n\nvar _default = (0, _theming.withTheme)(StyledText);\n\nexports.default = _default;","map":{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","rest","textColor","color","theme","font","writingDirection","I18nManager","textAlign","withTheme"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAAqD;AAAA,MAApD,KAAoD,QAApD,KAAoD;AAAA,MAApD,KAAoD,QAApD,KAAoD;AAAA,MAApD,MAAoD,QAApD,MAAoD;AAAA,MAApD,KAAoD,QAApD,KAAoD;AAAA,MAAlBC,IAAkB;AACtE,MAAMC,SAAS,GAAGC,oBAAMC,KAAK,CAALA,MAAAA,CAAND,IAAAA,EAAAA,KAAAA,CAAAA,KAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB;AACA,MAAME,IAAI,GAAGD,KAAK,CAALA,KAAAA,CAAb,MAAaA,CAAb;AACA,MAAME,gBAAgB,GAAGC,yBAAAA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAAP;AADK,OACL,IADK;AACwBK,MAAAA,SAAS,EAAtC,MADK;AAC2CF,MAAAA,gBAAAA,EAAAA;AAD3C,QAAA,KAAA;AAFT,GAAA,CAAA,CADF;AALF,CAAA;;eAgBeG,wBAAf,UAAeA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        { color: textColor, ...font, textAlign: 'left', writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"script"}