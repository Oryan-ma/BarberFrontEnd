{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _componentUpdater = require(\"../../component-updater\");\n\nvar _dateutils = require(\"../../dateutils\");\n\nvar _testIDs = require(\"../../testIDs\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\oryan\\\\Desktop\\\\BookMeX\\\\BookMexFrontEnd\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\header\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CalendarHeader = function (_Component) {\n  (0, _inherits2.default)(CalendarHeader, _Component);\n\n  var _super = _createSuper(CalendarHeader);\n\n  function CalendarHeader(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CalendarHeader);\n    _this = _super.call(this, props);\n\n    _this.addMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth(1);\n    };\n\n    _this.subtractMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth(-1);\n    };\n\n    _this.onPressLeft = function () {\n      var _this$props = _this.props,\n          onPressArrowLeft = _this$props.onPressArrowLeft,\n          month = _this$props.month;\n\n      if (typeof onPressArrowLeft === 'function') {\n        return onPressArrowLeft(_this.subtractMonth, month);\n      }\n\n      return _this.subtractMonth();\n    };\n\n    _this.onPressRight = function () {\n      var _this$props2 = _this.props,\n          onPressArrowRight = _this$props2.onPressArrowRight,\n          month = _this$props2.month;\n\n      if (typeof onPressArrowRight === 'function') {\n        return onPressArrowRight(_this.addMonth, month);\n      }\n\n      return _this.addMonth();\n    };\n\n    _this.renderWeekDays = function (weekDaysNames) {\n      var disabledDaysIndexes = _this.props.disabledDaysIndexes;\n      return weekDaysNames.map(function (day, idx) {\n        var dayStyle = [_this.style.dayHeader];\n\n        if (_lodash.default.includes(disabledDaysIndexes, idx)) {\n          dayStyle.push(_this.style.disabledDayHeader);\n        }\n\n        return _react.default.createElement(_reactNative.Text, {\n          allowFontScaling: false,\n          key: idx,\n          style: dayStyle,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }\n        }, day);\n      });\n    };\n\n    _this.renderHeader = function () {\n      var _this$props3 = _this.props,\n          renderHeader = _this$props3.renderHeader,\n          month = _this$props3.month,\n          monthFormat = _this$props3.monthFormat,\n          testID = _this$props3.testID,\n          webAriaLevel = _this$props3.webAriaLevel;\n      var webProps = _reactNative.Platform.OS === 'web' ? {\n        'aria-level': webAriaLevel\n      } : {};\n\n      if (renderHeader) {\n        return renderHeader(month);\n      }\n\n      return _react.default.createElement(_react.Fragment, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n        allowFontScaling: false,\n        style: _this.style.monthText,\n        testID: testID ? _testIDs.HEADER_MONTH_NAME + \"-\" + testID : _testIDs.HEADER_MONTH_NAME\n      }, webProps, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }), month.toString(monthFormat)));\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      switch (event.nativeEvent.actionName) {\n        case 'decrement':\n          _this.onPressLeft();\n\n          break;\n\n        case 'increment':\n          _this.onPressRight();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    return _this;\n  }\n\n  (0, _createClass2.default)(CalendarHeader, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.month.toString('yyyy MM') !== this.props.month.toString('yyyy MM')) {\n        return true;\n      }\n\n      return (0, _componentUpdater.shouldUpdate)(this.props, nextProps, ['displayLoadingIndicator', 'hideDayNames', 'firstDay', 'showWeekNumbers', 'monthFormat', 'renderArrow', 'disableArrowLeft', 'disableArrowRight']);\n    }\n  }, {\n    key: \"renderArrow\",\n    value: function renderArrow(direction) {\n      var _this$props4 = this.props,\n          hideArrows = _this$props4.hideArrows,\n          disableArrowLeft = _this$props4.disableArrowLeft,\n          disableArrowRight = _this$props4.disableArrowRight,\n          renderArrow = _this$props4.renderArrow,\n          testID = _this$props4.testID;\n\n      if (hideArrows) {\n        return _react.default.createElement(_reactNative.View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var isLeft = direction === 'left';\n      var id = isLeft ? _testIDs.CHANGE_MONTH_LEFT_ARROW : _testIDs.CHANGE_MONTH_RIGHT_ARROW;\n      var testId = testID ? id + \"-\" + testID : id;\n      var onPress = isLeft ? this.onPressLeft : this.onPressRight;\n      var imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n      var renderArrowDirection = isLeft ? 'left' : 'right';\n      var shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: !shouldDisable ? onPress : undefined,\n        disabled: shouldDisable,\n        style: this.style.arrow,\n        hitSlop: {\n          left: 20,\n          right: 20,\n          top: 20,\n          bottom: 20\n        },\n        testID: testId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, renderArrow ? renderArrow(renderArrowDirection) : _react.default.createElement(_reactNative.Image, {\n        source: imageSource,\n        style: shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      var _this$props5 = this.props,\n          displayLoadingIndicator = _this$props5.displayLoadingIndicator,\n          theme = _this$props5.theme,\n          testID = _this$props5.testID;\n\n      if (displayLoadingIndicator) {\n        return _react.default.createElement(_reactNative.ActivityIndicator, {\n          color: theme && theme.indicatorColor,\n          testID: testID ? _testIDs.HEADER_LOADING_INDICATOR + \"-\" + testID : _testIDs.HEADER_LOADING_INDICATOR,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderDayNames\",\n    value: function renderDayNames() {\n      var _this$props6 = this.props,\n          firstDay = _this$props6.firstDay,\n          hideDayNames = _this$props6.hideDayNames,\n          showWeekNumbers = _this$props6.showWeekNumbers,\n          testID = _this$props6.testID;\n      var weekDaysNames = (0, _dateutils.weekDayNames)(firstDay);\n\n      if (!hideDayNames) {\n        return _react.default.createElement(_reactNative.View, {\n          style: this.style.week,\n          testID: testID ? _testIDs.HEADER_DAY_NAMES + \"-\" + testID : _testIDs.HEADER_DAY_NAMES,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 9\n          }\n        }, showWeekNumbers && _react.default.createElement(_reactNative.Text, {\n          allowFontScaling: false,\n          style: this.style.dayHeader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 31\n          }\n        }), this.renderWeekDays(weekDaysNames));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          testID = _this$props7.testID;\n      return _react.default.createElement(_reactNative.View, {\n        testID: testID,\n        style: style,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction,\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: this.style.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, this.renderArrow('left'), _react.default.createElement(_reactNative.View, {\n        style: this.style.headerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, this.renderHeader(), this.renderIndicator()), this.renderArrow('right')), this.renderDayNames());\n    }\n  }]);\n  return CalendarHeader;\n}(_react.Component);\n\nCalendarHeader.displayName = 'IGNORE';\nCalendarHeader.propTypes = {\n  theme: _propTypes.default.object,\n  firstDay: _propTypes.default.number,\n  displayLoadingIndicator: _propTypes.default.bool,\n  showWeekNumbers: _propTypes.default.bool,\n  month: _propTypes.default.instanceOf(_xdate.default),\n  addMonth: _propTypes.default.func,\n  monthFormat: _propTypes.default.string,\n  hideDayNames: _propTypes.default.bool,\n  hideArrows: _propTypes.default.bool,\n  renderArrow: _propTypes.default.func,\n  onPressArrowLeft: _propTypes.default.func,\n  onPressArrowRight: _propTypes.default.func,\n  disableArrowLeft: _propTypes.default.bool,\n  disableArrowRight: _propTypes.default.bool,\n  disabledDaysIndexes: _propTypes.default.arrayOf(_propTypes.default.number),\n  renderHeader: _propTypes.default.any,\n  webAriaLevel: _propTypes.default.number\n};\nCalendarHeader.defaultProps = {\n  monthFormat: 'MMMM yyyy',\n  webAriaLevel: 1\n};\nvar _default = CalendarHeader;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/oryan/Desktop/BookMeX/BookMexFrontEnd/node_modules/react-native-calendars/src/calendar/header/index.js"],"names":["CalendarHeader","props","addMonth","subtractMonth","onPressLeft","onPressArrowLeft","month","onPressRight","onPressArrowRight","renderWeekDays","weekDaysNames","disabledDaysIndexes","map","day","idx","dayStyle","style","dayHeader","_","includes","push","disabledDayHeader","renderHeader","monthFormat","testID","webAriaLevel","webProps","Platform","OS","monthText","HEADER_MONTH_NAME","toString","onAccessibilityAction","event","nativeEvent","actionName","theme","nextProps","direction","hideArrows","disableArrowLeft","disableArrowRight","renderArrow","isLeft","id","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","testId","onPress","imageSource","require","renderArrowDirection","shouldDisable","undefined","arrow","left","right","top","bottom","disabledArrowImage","arrowImage","displayLoadingIndicator","indicatorColor","HEADER_LOADING_INDICATOR","firstDay","hideDayNames","showWeekNumbers","week","HEADER_DAY_NAMES","name","label","accessibilityElementsHidden","importantForAccessibility","header","headerContainer","renderIndicator","renderDayNames","Component","displayName","propTypes","PropTypes","object","number","bool","instanceOf","XDate","func","string","arrayOf","any","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component, Fragment} from 'react';\nimport {ActivityIndicator, Platform, View, Text, TouchableOpacity, Image} from 'react-native';\nimport {shouldUpdate} from '../../component-updater';\nimport {weekDayNames} from '../../dateutils';\nimport {\n  CHANGE_MONTH_LEFT_ARROW,\n  CHANGE_MONTH_RIGHT_ARROW,\n  HEADER_DAY_NAMES,\n  HEADER_LOADING_INDICATOR,\n  HEADER_MONTH_NAME\n} from '../../testIDs';\nimport styleConstructor from './style';\n\nclass CalendarHeader extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    month: PropTypes.instanceOf(XDate),\n    addMonth: PropTypes.func,\n    /** Month format in the title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    monthFormat: PropTypes.string,\n    /**  Hide day names. Default = false */\n    hideDayNames: PropTypes.bool,\n    /** Hide month navigation arrows. Default = false */\n    hideArrows: PropTypes.bool,\n    /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n    renderArrow: PropTypes.func,\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n    onPressArrowLeft: PropTypes.func,\n    /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n    onPressArrowRight: PropTypes.func,\n    /** Disable left arrow. Default = false */\n    disableArrowLeft: PropTypes.bool,\n    /** Disable right arrow. Default = false */\n    disableArrowRight: PropTypes.bool,\n    /** Apply custom disable color to selected day indexes */\n    disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n    /** Replace default month and year title with custom one. the function receive a date as parameter. */\n    renderHeader: PropTypes.any,\n    /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n    webAriaLevel: PropTypes.number\n  };\n\n  static defaultProps = {\n    monthFormat: 'MMMM yyyy',\n    webAriaLevel: 1\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.month.toString('yyyy MM') !== this.props.month.toString('yyyy MM')) {\n      return true;\n    }\n    return shouldUpdate(this.props, nextProps, [\n      'displayLoadingIndicator',\n      'hideDayNames',\n      'firstDay',\n      'showWeekNumbers',\n      'monthFormat',\n      'renderArrow',\n      'disableArrowLeft',\n      'disableArrowRight'\n    ]);\n  }\n\n  addMonth = () => {\n    const {addMonth} = this.props;\n    addMonth(1);\n  };\n\n  subtractMonth = () => {\n    const {addMonth} = this.props;\n    addMonth(-1);\n  };\n\n  onPressLeft = () => {\n    const {onPressArrowLeft, month} = this.props;\n\n    if (typeof onPressArrowLeft === 'function') {\n      return onPressArrowLeft(this.subtractMonth, month);\n    }\n    return this.subtractMonth();\n  };\n\n  onPressRight = () => {\n    const {onPressArrowRight, month} = this.props;\n\n    if (typeof onPressArrowRight === 'function') {\n      return onPressArrowRight(this.addMonth, month);\n    }\n    return this.addMonth();\n  };\n\n  renderWeekDays = weekDaysNames => {\n    const {disabledDaysIndexes} = this.props;\n\n    return weekDaysNames.map((day, idx) => {\n      const dayStyle = [this.style.dayHeader];\n\n      if (_.includes(disabledDaysIndexes, idx)) {\n        dayStyle.push(this.style.disabledDayHeader);\n      }\n\n      return (\n        <Text allowFontScaling={false} key={idx} style={dayStyle} numberOfLines={1} accessibilityLabel={''}>\n          {day}\n        </Text>\n      );\n    });\n  };\n\n  renderHeader = () => {\n    const {renderHeader, month, monthFormat, testID, webAriaLevel} = this.props;\n    const webProps = Platform.OS === 'web' ? {'aria-level': webAriaLevel} : {};\n\n    if (renderHeader) {\n      return renderHeader(month);\n    }\n\n    return (\n      <Fragment>\n        <Text\n          allowFontScaling={false}\n          style={this.style.monthText}\n          testID={testID ? `${HEADER_MONTH_NAME}-${testID}` : HEADER_MONTH_NAME}\n          {...webProps}\n        >\n          {month.toString(monthFormat)}\n        </Text>\n      </Fragment>\n    );\n  };\n\n  renderArrow(direction) {\n    const {hideArrows, disableArrowLeft, disableArrowRight, renderArrow, testID} = this.props;\n    if (hideArrows) {\n      return <View />;\n    }\n    const isLeft = direction === 'left';\n    const id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n    const testId = testID ? `${id}-${testID}` : id;\n    const onPress = isLeft ? this.onPressLeft : this.onPressRight;\n    const imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n    const renderArrowDirection = isLeft ? 'left' : 'right';\n    const shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n\n    return (\n      <TouchableOpacity\n        onPress={!shouldDisable ? onPress : undefined}\n        disabled={shouldDisable}\n        style={this.style.arrow}\n        hitSlop={{left: 20, right: 20, top: 20, bottom: 20}}\n        testID={testId}\n      >\n        {renderArrow ? (\n          renderArrow(renderArrowDirection)\n        ) : (\n          <Image source={imageSource} style={shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage} />\n        )}\n      </TouchableOpacity>\n    );\n  }\n\n  renderIndicator() {\n    const {displayLoadingIndicator, theme, testID} = this.props;\n\n    if (displayLoadingIndicator) {\n      return (\n        <ActivityIndicator\n          color={theme && theme.indicatorColor}\n          testID={testID ? `${HEADER_LOADING_INDICATOR}-${testID}` : HEADER_LOADING_INDICATOR}\n        />\n      );\n    }\n  }\n\n  renderDayNames() {\n    const {firstDay, hideDayNames, showWeekNumbers, testID} = this.props;\n    const weekDaysNames = weekDayNames(firstDay);\n\n    if (!hideDayNames) {\n      return (\n        <View style={this.style.week} testID={testID ? `${HEADER_DAY_NAMES}-${testID}` : HEADER_DAY_NAMES}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>}\n          {this.renderWeekDays(weekDaysNames)}\n        </View>\n      );\n    }\n  }\n\n  render() {\n    const {style, testID} = this.props;\n\n    return (\n      <View\n        testID={testID}\n        style={style}\n        accessible\n        accessibilityRole={'adjustable'}\n        accessibilityActions={[\n          {name: 'increment', label: 'increment'},\n          {name: 'decrement', label: 'decrement'}\n        ]}\n        onAccessibilityAction={this.onAccessibilityAction}\n        accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n        importantForAccessibility={this.props.importantForAccessibility} // Android\n      >\n        <View style={this.style.header}>\n          {this.renderArrow('left')}\n          <View style={this.style.headerContainer}>\n            {this.renderHeader()}\n            {this.renderIndicator()}\n          </View>\n          {this.renderArrow('right')}\n        </View>\n        {this.renderDayNames()}\n      </View>\n    );\n  }\n\n  onAccessibilityAction = event => {\n    switch (event.nativeEvent.actionName) {\n      case 'decrement':\n        this.onPressLeft();\n        break;\n      case 'increment':\n        this.onPressRight();\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"script"}