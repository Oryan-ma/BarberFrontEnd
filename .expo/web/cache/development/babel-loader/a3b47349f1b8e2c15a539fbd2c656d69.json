{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DialogTitle = exports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Title = _interopRequireDefault(require(\"../Typography/Title\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DialogTitle = function DialogTitle(_ref) {\n  var children = _ref.children,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"theme\", \"style\"]);\n  return React.createElement(_Title.default, _extends({\n    accessibilityTraits: \"header\",\n    accessibilityRole: \"header\",\n    style: [styles.text, {\n      color: theme.colors.text\n    }, style]\n  }, rest), children);\n};\n\nexports.DialogTitle = DialogTitle;\nDialogTitle.displayName = 'Dialog.Title';\n\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DialogTitle);\n\nexports.default = _default;","map":{"version":3,"sources":["DialogTitle.tsx"],"names":["DialogTitle","rest","styles","color","theme","text","marginTop","marginBottom","marginHorizontal","withTheme"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAgDA,IAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAC,QAAD,QAAC,QAAD;AAAA,MAAC,KAAD,QAAC,KAAD;AAAA,MAAC,KAAD,QAAC,KAAD;AAAA,MAA8BC,IAA9B;AAAA,SAClB,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;AACE,IAAA,mBAAmB,EADrB,QAAA;AAEE,IAAA,iBAAiB,EAFnB,QAAA;AAGE,IAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAc;AAAEC,MAAAA,KAAK,EAAEC,KAAK,CAALA,MAAAA,CAAaC;AAAtB,KAAd,EAAA,KAAA;AAHT,GAAA,EAAA,IAAA,CAAA,EADF,QACE,CADkB;AAAA,CAApB;;;AAWAL,WAAW,CAAXA,WAAAA,GAAAA,cAAAA;;AAEA,IAAME,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EADL,EAAA;AAEJC,IAAAA,YAAY,EAFR,EAAA;AAGJC,IAAAA,gBAAgB,EAAE;AAHd;AADyB,CAAlB,CAAf;;eAQeC,wBAAf,WAAeA,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({ children, theme, style, ...rest }: Props) => (\n  <Title\n    accessibilityTraits=\"header\"\n    accessibilityRole=\"header\"\n    style={[styles.text, { color: theme.colors.text }, style]}\n    {...rest}\n  >\n    {children}\n  </Title>\n);\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"script"}